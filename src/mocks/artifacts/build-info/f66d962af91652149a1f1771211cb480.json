{
	"id": "f66d962af91652149a1f1771211cb480",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/mocks/MockStETH.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"../external/IStETH.sol\";\n\nimport {UnstructuredStorage} from \"./DummyStorage.sol\";\n\n// 0xFe98dAA1947e23108d86d375316E890080e18f24\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MockStETH is ERC20 {\n    using UnstructuredStorage for bytes32;\n\n    bytes32 internal constant TOTAL_SHARES_POSITION = 0xe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e; // keccak256(\"lido.StETH.totalShares\")\n    bytes32 internal constant BUFFERED_ETHER_POSITION =\n        0xed310af23f61f96daefbcd140b306c0bdbf8c178398299741687b90e794772b0; // keccak256(\"lido.Lido.bufferedEther\");\n    bytes32 internal constant CL_BALANCE_POSITION = 0xa66d35f054e68143c18f32c990ed5cb972bb68a68f500cd2dd3a16bbf3686483; // keccak256(\"lido.Lido.beaconBalance\");\n    bytes32 internal constant DEPOSITED_VALIDATORS_POSITION =\n        0xe6e35175eb53fc006520a2a9c3e9711a7c00de6ff2c32dd31df8c5a24cac1b5c; // keccak256(\"lido.Lido.depositedValidators\");\n    bytes32 internal constant CL_VALIDATORS_POSITION =\n        0x9f70001d82b6ef54e9d3725b46581c3eb9ee3aa02b941b6aa54d678a9ca35b10; // keccak256(\"lido.Lido.beaconValidators\");\n\n    // Storage position for shares mapping\n    bytes32 internal constant SHARES_POSITION = keccak256(\"lido.StETH.shares\");\n\n    // Initial exchange rate: 1 share = 1 token\n    uint256 private constant INITIAL_RATE = 1e18;\n\n    constructor() ERC20(\"Liquid staked Ether 2.0\", \"stETH\") {\n        // Mint initial supply to deployer\n        _mint(msg.sender, 1000 ether);\n        _setShares(msg.sender, 1000 ether);\n        TOTAL_SHARES_POSITION.setStorageUint256(1000 ether);\n    }\n\n    function balanceOf(address _account) public view override returns (uint256) {\n        return getPooledEthByShares(sharesOf(_account));\n    }\n\n    function submit() external payable {\n        require(msg.value > 0, \"Cannot submit 0 ETH\");\n\n        uint256 sharesAmount = getSharesByPooledEth(msg.value);\n        _setShares(msg.sender, sharesOf(msg.sender) + sharesAmount);\n        TOTAL_SHARES_POSITION.setStorageUint256(getTotalShares() + sharesAmount);\n\n        _mint(msg.sender, msg.value);\n    }\n\n    function getTotalShares() public view returns (uint256) {\n        return TOTAL_SHARES_POSITION.getStorageUint256();\n    }\n\n    function sharesOf(address _account) public view returns (uint256) {\n        return _getShares(_account);\n    }\n\n    function getSharesByPooledEth(uint256 _ethAmount) public view returns (uint256) {\n        if (totalSupply() == 0) {\n            return _ethAmount;\n        }\n        return (_ethAmount * getTotalShares()) / totalSupply();\n    }\n\n    function getPooledEthByShares(uint256 _sharesAmount) public view returns (uint256) {\n        if (getTotalShares() == 0) {\n            return 0;\n        }\n        return (_sharesAmount * totalSupply()) / getTotalShares();\n    }\n\n    function distributeRewards(uint256 _rewardAmount) external {\n        _mint(address(this), _rewardAmount);\n    }\n\n    function _getShares(address _account) internal view returns (uint256) {\n        bytes32 slot = keccak256(abi.encodePacked(_account, SHARES_POSITION));\n        return UnstructuredStorage.getStorageUint256(slot);\n    }\n\n    function _setShares(address _account, uint256 _amount) internal {\n        bytes32 slot = keccak256(abi.encodePacked(_account, SHARES_POSITION));\n        UnstructuredStorage.setStorageUint256(slot, _amount);\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"src/mocks/DummyStorage.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.22;\n\nlibrary UnstructuredStorage {\n    function getStorageBool(bytes32 position) internal view returns (bool data) {\n        assembly {\n            data := sload(position)\n        }\n    }\n\n    function getStorageAddress(bytes32 position) internal view returns (address data) {\n        assembly {\n            data := sload(position)\n        }\n    }\n\n    function getStorageBytes32(bytes32 position) internal view returns (bytes32 data) {\n        assembly {\n            data := sload(position)\n        }\n    }\n\n    function getStorageUint256(bytes32 position) internal view returns (uint256 data) {\n        assembly {\n            data := sload(position)\n        }\n    }\n\n    function setStorageBool(bytes32 position, bool data) internal {\n        assembly {\n            sstore(position, data)\n        }\n    }\n\n    function setStorageAddress(bytes32 position, address data) internal {\n        assembly {\n            sstore(position, data)\n        }\n    }\n\n    function setStorageBytes32(bytes32 position, bytes32 data) internal {\n        assembly {\n            sstore(position, data)\n        }\n    }\n\n    function setStorageUint256(bytes32 position, uint256 data) internal {\n        assembly {\n            sstore(position, data)\n        }\n    }\n}\n\ncontract DummyStorage {\n    using UnstructuredStorage for bytes32;\n\n    bytes32 internal constant TOTAL_SHARES_POSITION = 0xe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e;\n\n    function getTotalShares() public view returns (uint256) {\n        return TOTAL_SHARES_POSITION.getStorageUint256();\n    }\n\n    function setTotalShares(uint256 _new) public {\n        TOTAL_SHARES_POSITION.setStorageUint256(_new);\n    }\n} // 0xF7Ac55C3590abcB280C45Eae3865e31E506BB339"
			},
			"src/external/IStETH.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\ninterface IStETH {\n    function totalSupply() external view returns (uint256);\n    function getTotalShares() external view returns (uint256);\n    function sharesOf(address _account) external view returns (uint256);\n}"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"forge-std/=lib/forge-std/",
				"@openzeppelin/=lib/openzeppelin-contracts/",
				"@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/",
				"@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/",
				"@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol",
				"lz-evm-messagelib/=lib/layerzero-v2/packages/layerzero-v2/evm/messagelib"
			],
			"evmVersion": "cancun"
		}
	},
	"output": {
		"contracts": {
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol\",\":@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/\",\":@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/\",\":lz-evm-messagelib/=lib/layerzero-v2/packages/layerzero-v2/evm/messagelib\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol\",\":@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/\",\":@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/\",\":lz-evm-messagelib/=lib/layerzero-v2/packages/layerzero-v2/evm/messagelib\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol\",\":@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/\",\":@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/\",\":lz-evm-messagelib/=lib/layerzero-v2/packages/layerzero-v2/evm/messagelib\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol\",\":@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/\",\":@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/\",\":lz-evm-messagelib/=lib/layerzero-v2/packages/layerzero-v2/evm/messagelib\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol\",\":@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/\",\":@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/\",\":lz-evm-messagelib/=lib/layerzero-v2/packages/layerzero-v2/evm/messagelib\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol\",\":@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/\",\":@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/\",\":lz-evm-messagelib/=lib/layerzero-v2/packages/layerzero-v2/evm/messagelib\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol\",\":@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/\",\":@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/\",\":lz-evm-messagelib/=lib/layerzero-v2/packages/layerzero-v2/evm/messagelib\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/external/IStETH.sol": {
				"IStETH": {
					"abi": [
						{
							"inputs": [],
							"name": "getTotalShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "sharesOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTotalShares()": "d5002f2e",
							"sharesOf(address)": "f5eb42dc",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getTotalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"sharesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/external/IStETH.sol\":\"IStETH\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol\",\":@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/\",\":@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/\",\":lz-evm-messagelib/=lib/layerzero-v2/packages/layerzero-v2/evm/messagelib\"]},\"sources\":{\"src/external/IStETH.sol\":{\"keccak256\":\"0x48496b9cc5ab0f654d7afc497b28e1814a71d461fe930160f408e86c32783f05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14ae6cf384c0191de96cb37c0f81c0b5dda2dab783418fcf670f4c58552c2887\",\"dweb:/ipfs/QmbZaR5uwxzdkd54vKjwBLjsy6d7u8KnSQuNSBrdXhphHB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/mocks/DummyStorage.sol": {
				"DummyStorage": {
					"abi": [
						{
							"inputs": [],
							"name": "getTotalShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_new",
									"type": "uint256"
								}
							],
							"name": "setTotalShares",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/mocks/DummyStorage.sol\":1305:1736  contract DummyStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/mocks/DummyStorage.sol\":1305:1736  contract DummyStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa77384c1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd5002f2e\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"src/mocks/DummyStorage.sol\":1627:1734  function setTotalShares(uint256 _new) public {... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"src/mocks/DummyStorage.sol\":1500:1621  function getTotalShares() public view returns (uint256) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"src/mocks/DummyStorage.sol\":1500:1621  function getTotalShares() public view returns (uint256) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/mocks/DummyStorage.sol\":1627:1734  function setTotalShares(uint256 _new) public {... */\n    tag_8:\n        /* \"src/mocks/DummyStorage.sol\":1682:1727  TOTAL_SHARES_POSITION.setStorageUint256(_new) */\n      tag_14\n        /* \"src/mocks/DummyStorage.sol\":1427:1493  0xe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e */\n      0xe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e\n        /* \"src/mocks/DummyStorage.sol\":1722:1726  _new */\n      dup3\n        /* \"src/mocks/DummyStorage.sol\":1263:1285  sstore(position, data) */\n      swap1\n      sstore\n        /* \"src/mocks/DummyStorage.sol\":1162:1301  function setStorageUint256(bytes32 position, uint256 data) internal {... */\n      jump\n        /* \"src/mocks/DummyStorage.sol\":1682:1727  TOTAL_SHARES_POSITION.setStorageUint256(_new) */\n    tag_14:\n        /* \"src/mocks/DummyStorage.sol\":1627:1734  function setTotalShares(uint256 _new) public {... */\n      pop\n      jump\t// out\n        /* \"src/mocks/DummyStorage.sol\":1500:1621  function getTotalShares() public view returns (uint256) {... */\n    tag_10:\n        /* \"src/mocks/DummyStorage.sol\":1547:1554  uint256 */\n      0x00\n        /* \"src/mocks/DummyStorage.sol\":1573:1614  TOTAL_SHARES_POSITION.getStorageUint256() */\n      tag_17\n        /* \"src/mocks/DummyStorage.sol\":1427:1493  0xe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e */\n      0xe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e\n        /* \"src/mocks/DummyStorage.sol\":696:711  sload(position) */\n      sload\n      swap1\n        /* \"src/mocks/DummyStorage.sol\":573:727  function getStorageUint256(bytes32 position) internal view returns (uint256 data) {... */\n      jump\n        /* \"src/mocks/DummyStorage.sol\":1573:1614  TOTAL_SHARES_POSITION.getStorageUint256() */\n    tag_17:\n        /* \"src/mocks/DummyStorage.sol\":1566:1614  return TOTAL_SHARES_POSITION.getStorageUint256() */\n      swap1\n      pop\n        /* \"src/mocks/DummyStorage.sol\":1500:1621  function getTotalShares() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_7:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_23\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_23:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202b4f323a4cc3df1f145214822ce3a118595220c0f69fbed9cd8009f052c5636564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506101018061001c5f395ff3fe6080604052348015600e575f5ffd5b50600436106030575f3560e01c8063a77384c1146034578063d5002f2e146045575b5f5ffd5b6043603f36600460b5565b605d565b005b604b6088565b60405190815260200160405180910390f35b60857fe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e829055565b50565b5f60b07fe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e5490565b905090565b5f6020828403121560c4575f5ffd5b503591905056fea26469706673582212202b4f323a4cc3df1f145214822ce3a118595220c0f69fbed9cd8009f052c5636564736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x101 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA77384C1 EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0xD5002F2E EQ PUSH1 0x45 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x43 PUSH1 0x3F CALLDATASIZE PUSH1 0x4 PUSH1 0xB5 JUMP JUMPDEST PUSH1 0x5D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4B PUSH1 0x88 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x85 PUSH32 0xE3B4B636E601189B5F4C6742EDF2538AC12BB61ED03E6DA26949D69838FA447E DUP3 SWAP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xB0 PUSH32 0xE3B4B636E601189B5F4C6742EDF2538AC12BB61ED03E6DA26949D69838FA447E SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xC4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0x4F ORIGIN GASPRICE 0x4C 0xC3 0xDF 0x1F EQ MSTORE EQ DUP3 0x2C 0xE3 LOG1 XOR MSIZE MSTORE KECCAK256 0xC0 0xF6 SWAP16 0xBE 0xD9 0xCD DUP1 MULMOD CREATE MSTORE 0xC5 PUSH4 0x6564736F PUSH13 0x634300081C0033000000000000 ",
							"sourceMap": "1305:431:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getStorageUint256_843": {
									"entryPoint": null,
									"id": 843,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalShares_896": {
									"entryPoint": 136,
									"id": 896,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setStorageUint256_879": {
									"entryPoint": null,
									"id": 879,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTotalShares_908": {
									"entryPoint": 93,
									"id": 908,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:378:8",
										"nodeType": "YulBlock",
										"src": "0:378:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:8",
													"nodeType": "YulBlock",
													"src": "84:110:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:8",
																"nodeType": "YulBlock",
																"src": "130:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:8",
																					"nodeType": "YulLiteral",
																					"src": "139:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:8",
																					"nodeType": "YulLiteral",
																					"src": "142:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:8"
																			},
																			"nativeSrc": "132:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:8"
																		},
																		"nativeSrc": "132:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:8"
																		},
																		"nativeSrc": "101:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:8",
																		"nodeType": "YulLiteral",
																		"src": "126:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:8"
																},
																"nativeSrc": "97:32:8",
																"nodeType": "YulFunctionCall",
																"src": "97:32:8"
															},
															"nativeSrc": "94:52:8",
															"nodeType": "YulIf",
															"src": "94:52:8"
														},
														{
															"nativeSrc": "155:33:8",
															"nodeType": "YulAssignment",
															"src": "155:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:8"
																},
																"nativeSrc": "165:23:8",
																"nodeType": "YulFunctionCall",
																"src": "165:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:8",
														"nodeType": "YulTypedName",
														"src": "50:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:8",
														"nodeType": "YulTypedName",
														"src": "61:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:8",
														"nodeType": "YulTypedName",
														"src": "73:6:8",
														"type": ""
													}
												],
												"src": "14:180:8"
											},
											{
												"body": {
													"nativeSrc": "300:76:8",
													"nodeType": "YulBlock",
													"src": "300:76:8",
													"statements": [
														{
															"nativeSrc": "310:26:8",
															"nodeType": "YulAssignment",
															"src": "310:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "322:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "333:2:8",
																		"nodeType": "YulLiteral",
																		"src": "333:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "318:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:8"
																},
																"nativeSrc": "318:18:8",
																"nodeType": "YulFunctionCall",
																"src": "318:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "310:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "352:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "363:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "345:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:8"
																},
																"nativeSrc": "345:25:8",
																"nodeType": "YulFunctionCall",
																"src": "345:25:8"
															},
															"nativeSrc": "345:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "345:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "199:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "269:9:8",
														"nodeType": "YulTypedName",
														"src": "269:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "280:6:8",
														"nodeType": "YulTypedName",
														"src": "280:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "291:4:8",
														"nodeType": "YulTypedName",
														"src": "291:4:8",
														"type": ""
													}
												],
												"src": "199:177:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50600436106030575f3560e01c8063a77384c1146034578063d5002f2e146045575b5f5ffd5b6043603f36600460b5565b605d565b005b604b6088565b60405190815260200160405180910390f35b60857fe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e829055565b50565b5f60b07fe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e5490565b905090565b5f6020828403121560c4575f5ffd5b503591905056fea26469706673582212202b4f323a4cc3df1f145214822ce3a118595220c0f69fbed9cd8009f052c5636564736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA77384C1 EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0xD5002F2E EQ PUSH1 0x45 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x43 PUSH1 0x3F CALLDATASIZE PUSH1 0x4 PUSH1 0xB5 JUMP JUMPDEST PUSH1 0x5D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4B PUSH1 0x88 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x85 PUSH32 0xE3B4B636E601189B5F4C6742EDF2538AC12BB61ED03E6DA26949D69838FA447E DUP3 SWAP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xB0 PUSH32 0xE3B4B636E601189B5F4C6742EDF2538AC12BB61ED03E6DA26949D69838FA447E SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xC4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0x4F ORIGIN GASPRICE 0x4C 0xC3 0xDF 0x1F EQ MSTORE EQ DUP3 0x2C 0xE3 LOG1 XOR MSIZE MSTORE KECCAK256 0xC0 0xF6 SWAP16 0xBE 0xD9 0xCD DUP1 MULMOD CREATE MSTORE 0xC5 PUSH4 0x6564736F PUSH13 0x634300081C0033000000000000 ",
							"sourceMap": "1305:431:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1627:107;;;;;;:::i;:::-;;:::i;:::-;;1500:121;;;:::i;:::-;;;345:25:8;;;333:2;318:18;1500:121:6;;;;;;;1627:107;1682:45;1427:66;1722:4;1263:22;;1162:139;1682:45;1627:107;:::o;1500:121::-;1547:7;1573:41;1427:66;696:15;;573:154;1573:41;1566:48;;1500:121;:::o;14:180:8:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:8;;14:180;-1:-1:-1;14:180:8:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "51400",
								"executionCost": "103",
								"totalCost": "51503"
							},
							"external": {
								"getTotalShares()": "2316",
								"setTotalShares(uint256)": "22320"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1305,
									"end": 1736,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1305,
									"end": 1736,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b4f323a4cc3df1f145214822ce3a118595220c0f69fbed9cd8009f052c5636564736f6c634300081c0033",
									".code": [
										{
											"begin": 1305,
											"end": 1736,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "PUSH",
											"source": 6,
											"value": "A77384C1"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "PUSH",
											"source": 6,
											"value": "D5002F2E"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1736,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1734,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1627,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1627,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1627,
											"end": 1734,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1627,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1627,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1734,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1627,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1627,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1734,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1627,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1734,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1500,
											"end": 1621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1734,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1627,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1682,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1427,
											"end": 1493,
											"name": "PUSH",
											"source": 6,
											"value": "E3B4B636E601189B5F4C6742EDF2538AC12BB61ED03E6DA26949D69838FA447E"
										},
										{
											"begin": 1722,
											"end": 1726,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1263,
											"end": 1285,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1263,
											"end": 1285,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1301,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1682,
											"end": 1727,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1682,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1734,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1554,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1427,
											"end": 1493,
											"name": "PUSH",
											"source": 6,
											"value": "E3B4B636E601189B5F4C6742EDF2538AC12BB61ED03E6DA26949D69838FA447E"
										},
										{
											"begin": 696,
											"end": 711,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 696,
											"end": 711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 573,
											"end": 727,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1614,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1573,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"src/external/IStETH.sol",
								"src/mocks/DummyStorage.sol",
								"src/mocks/MockStETH.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getTotalShares()": "d5002f2e",
							"setTotalShares(uint256)": "a77384c1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getTotalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_new\",\"type\":\"uint256\"}],\"name\":\"setTotalShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mocks/DummyStorage.sol\":\"DummyStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol\",\":@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/\",\":@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/\",\":lz-evm-messagelib/=lib/layerzero-v2/packages/layerzero-v2/evm/messagelib\"]},\"sources\":{\"src/mocks/DummyStorage.sol\":{\"keccak256\":\"0x7348a896a0bcf3644f8e47a6717a0e57a3064d1b876a2d35fa5d0d55174a6af3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a815af462d682d25f43e05f6993bd944cfcfdc7c49e3892969667b0f0f684993\",\"dweb:/ipfs/QmS5cqdtSaQEjT49QGTyKgRzALB53LQEwmffP3AYzTJP3y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"UnstructuredStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/mocks/DummyStorage.sol\":65:1303  library UnstructuredStorage {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/mocks/DummyStorage.sol\":65:1303  library UnstructuredStorage {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220d0fc16fccbeec0fb7a312763e0338794c02537092b99183edbd8dc7cfa731ec264736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220d0fc16fccbeec0fb7a312763e0338794c02537092b99183edbd8dc7cfa731ec264736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xFC AND 0xFC 0xCB 0xEE 0xC0 0xFB PUSH27 0x312763E0338794C02537092B99183EDBD8DC7CFA731EC264736F6C PUSH4 0x4300081C STOP CALLER ",
							"sourceMap": "65:1238:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;65:1238:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220d0fc16fccbeec0fb7a312763e0338794c02537092b99183edbd8dc7cfa731ec264736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xFC AND 0xFC 0xCB 0xEE 0xC0 0xFB PUSH27 0x312763E0338794C02537092B99183EDBD8DC7CFA731EC264736F6C PUSH4 0x4300081C STOP CALLER ",
							"sourceMap": "65:1238:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getStorageAddress(bytes32)": "infinite",
								"getStorageBool(bytes32)": "infinite",
								"getStorageBytes32(bytes32)": "infinite",
								"getStorageUint256(bytes32)": "infinite",
								"setStorageAddress(bytes32,address)": "infinite",
								"setStorageBool(bytes32,bool)": "infinite",
								"setStorageBytes32(bytes32,bytes32)": "infinite",
								"setStorageUint256(bytes32,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 1303,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 65,
									"end": 1303,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d0fc16fccbeec0fb7a312763e0338794c02537092b99183edbd8dc7cfa731ec264736f6c634300081c0033",
									".code": [
										{
											"begin": 65,
											"end": 1303,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 65,
											"end": 1303,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 65,
											"end": 1303,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 65,
											"end": 1303,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 1303,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 1303,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 65,
											"end": 1303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 1303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 1303,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"src/external/IStETH.sol",
								"src/mocks/DummyStorage.sol",
								"src/mocks/MockStETH.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mocks/DummyStorage.sol\":\"UnstructuredStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol\",\":@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/\",\":@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/\",\":lz-evm-messagelib/=lib/layerzero-v2/packages/layerzero-v2/evm/messagelib\"]},\"sources\":{\"src/mocks/DummyStorage.sol\":{\"keccak256\":\"0x7348a896a0bcf3644f8e47a6717a0e57a3064d1b876a2d35fa5d0d55174a6af3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a815af462d682d25f43e05f6993bd944cfcfdc7c49e3892969667b0f0f684993\",\"dweb:/ipfs/QmS5cqdtSaQEjT49QGTyKgRzALB53LQEwmffP3AYzTJP3y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/mocks/MockStETH.sol": {
				"MockStETH": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardAmount",
									"type": "uint256"
								}
							],
							"name": "distributeRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_sharesAmount",
									"type": "uint256"
								}
							],
							"name": "getPooledEthByShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ethAmount",
									"type": "uint256"
								}
							],
							"name": "getSharesByPooledEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "sharesOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "submit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/mocks/MockStETH.sol\":252:3429  contract MockStETH is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"src/mocks/MockStETH.sol\":1409:1659  constructor() ERC20(\"Liquid staked Ether 2.0\", \"stETH\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x17\n  dup2\n  mstore\n  0x20\n  add\n  0x4c6971756964207374616b656420457468657220322e30000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xdb, 0x0e6e88aa89)\n  dup2\n  mstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_7\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup3\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  dup3\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"src/mocks/MockStETH.sol\":1518:1547  _mint(msg.sender, 1000 ether) */\n  tag_9\n    /* \"src/mocks/MockStETH.sol\":1524:1534  msg.sender */\n  caller\n    /* \"src/mocks/MockStETH.sol\":1536:1546  1000 ether */\n  0x3635c9adc5dea00000\n    /* \"src/mocks/MockStETH.sol\":1518:1523  _mint */\n  shl(0x20, tag_10)\n    /* \"src/mocks/MockStETH.sol\":1518:1547  _mint(msg.sender, 1000 ether) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"src/mocks/MockStETH.sol\":1557:1591  _setShares(msg.sender, 1000 ether) */\n  tag_11\n    /* \"src/mocks/MockStETH.sol\":1568:1578  msg.sender */\n  caller\n    /* \"src/mocks/MockStETH.sol\":1580:1590  1000 ether */\n  0x3635c9adc5dea00000\n    /* \"src/mocks/MockStETH.sol\":1557:1567  _setShares */\n  tag_12\n    /* \"src/mocks/MockStETH.sol\":1557:1591  _setShares(msg.sender, 1000 ether) */\n  jump\t// in\ntag_11:\n    /* \"src/mocks/MockStETH.sol\":1641:1651  1000 ether */\n  0x3635c9adc5dea00000\n    /* \"src/mocks/MockStETH.sol\":380:446  0xe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e */\n  0xe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e\n    /* \"src/mocks/DummyStorage.sol\":1263:1285  sstore(position, data) */\n  sstore\n    /* \"src/mocks/MockStETH.sol\":252:3429  contract MockStETH is ERC20 {... */\n  jump(tag_44)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_10:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  dup3\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_17\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2801:2852   */\n  mstore\n    /* \"#utility.yul\":2774:2792   */\n  0x24\n  add\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\ntag_18:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_17:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_20\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  tag_21\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  jump\t// in\ntag_20:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"src/mocks/MockStETH.sol\":3215:3427  function _setShares(address _account, uint256 _amount) internal {... */\ntag_12:\n    /* \"src/mocks/MockStETH.sol\":3314:3357  abi.encodePacked(_account, SHARES_POSITION) */\n  mload(0x40)\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"#utility.yul\":3065:3067   */\n  0x60\n    /* \"#utility.yul\":3036:3051   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":3032:3077   */\n  and\n    /* \"src/mocks/MockStETH.sol\":3314:3357  abi.encodePacked(_account, SHARES_POSITION) */\n  0x20\n  dup3\n  add\n    /* \"#utility.yul\":3020:3078   */\n  mstore\n    /* \"src/mocks/MockStETH.sol\":1273:1303  keccak256(\"lido.StETH.shares\") */\n  0x101b73cb67a778893ea0c666939f8923c501a5d4cd59d1ecf919b502247b5b0c\n    /* \"#utility.yul\":3094:3106   */\n  0x34\n  dup3\n  add\n    /* \"#utility.yul\":3087:3115   */\n  mstore\n    /* \"src/mocks/MockStETH.sol\":3289:3301  bytes32 slot */\n  0x00\n  swap1\n    /* \"#utility.yul\":3131:3143   */\n  0x54\n  add\n    /* \"src/mocks/MockStETH.sol\":3314:3357  abi.encodePacked(_account, SHARES_POSITION) */\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"src/mocks/MockStETH.sol\":3304:3358  keccak256(abi.encodePacked(_account, SHARES_POSITION)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"src/mocks/MockStETH.sol\":3289:3358  bytes32 slot = keccak256(abi.encodePacked(_account, SHARES_POSITION)) */\n  swap1\n  pop\n    /* \"src/mocks/MockStETH.sol\":3368:3420  UnstructuredStorage.setStorageUint256(slot, _amount) */\n  tag_25\n    /* \"src/mocks/MockStETH.sol\":3406:3410  slot */\n  dup2\n    /* \"src/mocks/MockStETH.sol\":3412:3419  _amount */\n  dup4\n    /* \"src/mocks/MockStETH.sol\":3368:3405  UnstructuredStorage.setStorageUint256 */\n  shl(0x20, tag_14)\n    /* \"src/mocks/MockStETH.sol\":3368:3420  UnstructuredStorage.setStorageUint256(slot, _amount) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"src/mocks/MockStETH.sol\":3279:3427  {... */\n  pop\n    /* \"src/mocks/MockStETH.sol\":3215:3427  function _setShares(address _account, uint256 _amount) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"src/mocks/DummyStorage.sol\":1162:1301  function setStorageUint256(bytes32 position, uint256 data) internal {... */\ntag_14:\n    /* \"src/mocks/DummyStorage.sol\":1263:1285  sstore(position, data) */\n  swap1\n  sstore\n    /* \"src/mocks/DummyStorage.sol\":1162:1301  function setStorageUint256(bytes32 position, uint256 data) internal {... */\n  jump\t// out\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  dup4\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_31\n  swap1\n  pop\n  jump\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  dup4\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3601:3633   */\n  dup6\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3583:3634   */\n  mstore\n    /* \"#utility.yul\":3650:3668   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":3643:3677   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":3693:3711   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":3686:3720   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":3556:3574   */\n  0x64\n  add\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_18\n    /* \"#utility.yul\":3381:3726   */\n  jump\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_32:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup5\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  dup3\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup3\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_36:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n    /* \"#utility.yul\":3877:3902   */\n  dup2\n  mstore\n    /* \"#utility.yul\":3865:3867   */\n  0x20\n    /* \"#utility.yul\":3850:3868   */\n  add\n  swap1\n    /* \"#utility.yul\":3731:3908   */\n  jump\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_39:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_40:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_47:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_48:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_42:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_52:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_53:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_53)\ntag_55:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2650   */\ntag_6:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_59\n  tag_39\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1555:1652   */\n  tag_60\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_61\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_40\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_42\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1701:1705   */\n  0x20\n    /* \"#utility.yul\":1732:1734   */\n  0x1f\n    /* \"#utility.yul\":1721:1735   */\n  dup3\n  gt\n    /* \"#utility.yul\":1749:1750   */\n  0x01\n    /* \"#utility.yul\":1744:2393   */\n  dup2\n  eq\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2437:2438   */\n  0x00\n    /* \"#utility.yul\":2454:2460   */\n  dup4\n    /* \"#utility.yul\":2451:2540   */\n  iszero\n  tag_64\n  jumpi\n  pop\n    /* \"#utility.yul\":2506:2525   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2500:2526   */\n  mload\n    /* \"#utility.yul\":2451:2540   */\ntag_64:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2553:2634   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1714:2644   */\n  jump(tag_55)\n    /* \"#utility.yul\":1744:2393   */\ntag_63:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1780:1800   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":1898:2120   */\ntag_67:\n    /* \"#utility.yul\":1912:1919   */\n  dup3\n    /* \"#utility.yul\":1909:1910   */\n  dup2\n    /* \"#utility.yul\":1906:1920   */\n  lt\n    /* \"#utility.yul\":1898:2120   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1994:2013   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":1988:2014   */\n  mload\n    /* \"#utility.yul\":1973:2015   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2101:2105   */\n  0x20\n    /* \"#utility.yul\":2086:2106   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2054:2055   */\n  0x01\n    /* \"#utility.yul\":2042:2056   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":1928:1940   */\n  add\n    /* \"#utility.yul\":1898:2120   */\n  jump(tag_67)\ntag_69:\n    /* \"#utility.yul\":1902:1905   */\n  pop\n    /* \"#utility.yul\":2148:2154   */\n  dup5\n    /* \"#utility.yul\":2139:2146   */\n  dup3\n    /* \"#utility.yul\":2136:2155   */\n  lt\n    /* \"#utility.yul\":2133:2334   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2209:2228   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2203:2229   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2292:2293   */\n  0x03\n    /* \"#utility.yul\":2288:2302   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2304:2307   */\n  0xf8\n    /* \"#utility.yul\":2284:2308   */\n  and\n    /* \"#utility.yul\":2280:2317   */\n  shr\n    /* \"#utility.yul\":2276:2318   */\n  not\n    /* \"#utility.yul\":2261:2319   */\n  and\n    /* \"#utility.yul\":2246:2320   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2133:2334   */\ntag_70:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2380:2381   */\n  0x01\n    /* \"#utility.yul\":2364:2378   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2360:2382   */\n  add\n    /* \"#utility.yul\":2347:2383   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1351:2650   */\n  jump\t// out\n    /* \"#utility.yul\":3154:3376   */\ntag_30:\n    /* \"#utility.yul\":3219:3228   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3240:3250   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3237:3370   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3292:3302   */\n  0x4e487b71\n    /* \"#utility.yul\":3287:3290   */\n  0xe0\n    /* \"#utility.yul\":3283:3303   */\n  shl\n    /* \"#utility.yul\":3280:3281   */\n  0x00\n    /* \"#utility.yul\":3273:3304   */\n  mstore\n    /* \"#utility.yul\":3327:3331   */\n  0x11\n    /* \"#utility.yul\":3324:3325   */\n  0x04\n    /* \"#utility.yul\":3317:3332   */\n  mstore\n    /* \"#utility.yul\":3355:3359   */\n  0x24\n    /* \"#utility.yul\":3352:3353   */\n  0x00\n    /* \"#utility.yul\":3345:3360   */\n  revert\n    /* \"#utility.yul\":3237:3370   */\ntag_74:\n    /* \"#utility.yul\":3154:3376   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3731:3908   */\ntag_44:\n    /* \"src/mocks/MockStETH.sol\":252:3429  contract MockStETH is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/mocks/MockStETH.sol\":252:3429  contract MockStETH is ERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5bcb2fc6\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd5002f2e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf5eb42dc\n      eq\n      tag_16\n      jumpi\n      revert(0x00, 0x00)\n    tag_18:\n      dup1\n      0x5bcb2fc6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7a28fb88\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      revert(0x00, 0x00)\n    tag_17:\n      dup1\n      0x19208451\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x19208451\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x59974e38\n      eq\n      tag_8\n      jumpi\n      revert(0x00, 0x00)\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      revert(0x00, 0x00)\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_23\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      revert(0x00, 0x00)\n    tag_32:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      tag_23\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"src/mocks/MockStETH.sol\":2412:2638  function getSharesByPooledEth(uint256 _ethAmount) public view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      revert(0x00, 0x00)\n    tag_37:\n      pop\n      tag_33\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      revert(0x00, 0x00)\n    tag_43:\n      pop\n      tag_26\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      revert(0x00, 0x00)\n    tag_49:\n      pop\n      mload(0x40)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"#utility.yul\":2046:2082   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2034:2036   */\n      0x20\n        /* \"#utility.yul\":2019:2037   */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      tag_23\n        /* \"#utility.yul\":1904:2088   */\n      jump\n        /* \"src/mocks/MockStETH.sol\":2876:2987  function distributeRewards(uint256 _rewardAmount) external {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      revert(0x00, 0x00)\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"src/mocks/MockStETH.sol\":1811:2163  function submit() external payable {... */\n    tag_9:\n      tag_55\n      tag_59\n      jump\t// in\n        /* \"src/mocks/MockStETH.sol\":1665:1805  function balanceOf(address _account) public view override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      revert(0x00, 0x00)\n    tag_60:\n      pop\n      tag_33\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n        /* \"src/mocks/MockStETH.sol\":2644:2870  function getPooledEthByShares(uint256 _sharesAmount) public view returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      revert(0x00, 0x00)\n    tag_66:\n      pop\n      tag_33\n      tag_68\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      revert(0x00, 0x00)\n    tag_71:\n      pop\n      tag_21\n      tag_73\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      revert(0x00, 0x00)\n    tag_75:\n      pop\n      tag_26\n      tag_77\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"src/mocks/MockStETH.sol\":2169:2290  function getTotalShares() public view returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      revert(0x00, 0x00)\n    tag_80:\n      pop\n      tag_33\n      tag_82\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      revert(0x00, 0x00)\n    tag_84:\n      pop\n      tag_33\n      tag_86\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"src/mocks/MockStETH.sol\":2296:2406  function sharesOf(address _account) public view returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      revert(0x00, 0x00)\n    tag_90:\n      pop\n      tag_33\n      tag_92\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_22:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_97\n      jump\t// in\n    tag_98:\n      dup1\n      iszero\n      tag_99\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_100\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_99)\n    tag_100:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_101:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_101\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_105\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_106\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_105:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_102:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/mocks/MockStETH.sol\":2412:2638  function getSharesByPooledEth(uint256 _ethAmount) public view returns (uint256) {... */\n    tag_41:\n        /* \"src/mocks/MockStETH.sol\":2483:2490  uint256 */\n      0x00\n        /* \"src/mocks/MockStETH.sol\":2506:2519  totalSupply() */\n      tag_109\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"src/mocks/MockStETH.sol\":2506:2519  totalSupply() */\n    tag_109:\n        /* \"src/mocks/MockStETH.sol\":2523:2524  0 */\n      0x00\n        /* \"src/mocks/MockStETH.sol\":2506:2524  totalSupply() == 0 */\n      sub\n        /* \"src/mocks/MockStETH.sol\":2502:2568  if (totalSupply() == 0) {... */\n      tag_110\n      jumpi\n      pop\n        /* \"src/mocks/MockStETH.sol\":2547:2557  _ethAmount */\n      swap1\n        /* \"src/mocks/MockStETH.sol\":2412:2638  function getSharesByPooledEth(uint256 _ethAmount) public view returns (uint256) {... */\n      jump\t// out\n        /* \"src/mocks/MockStETH.sol\":2502:2568  if (totalSupply() == 0) {... */\n    tag_110:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"src/mocks/MockStETH.sol\":2598:2614  getTotalShares() */\n      tag_112\n        /* \"src/mocks/MockStETH.sol\":2598:2612  getTotalShares */\n      tag_82\n        /* \"src/mocks/MockStETH.sol\":2598:2614  getTotalShares() */\n      jump\t// in\n    tag_112:\n        /* \"src/mocks/MockStETH.sol\":2585:2614  _ethAmount * getTotalShares() */\n      tag_113\n      swap1\n        /* \"src/mocks/MockStETH.sol\":2585:2595  _ethAmount */\n      dup5\n        /* \"src/mocks/MockStETH.sol\":2585:2614  _ethAmount * getTotalShares() */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"src/mocks/MockStETH.sol\":2584:2631  (_ethAmount * getTotalShares()) / totalSupply() */\n      tag_102\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_47:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_119\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_120\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_119:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_121\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_122\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_121:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n      swap5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/mocks/MockStETH.sol\":2876:2987  function distributeRewards(uint256 _rewardAmount) external {... */\n    tag_57:\n        /* \"src/mocks/MockStETH.sol\":2945:2980  _mint(address(this), _rewardAmount) */\n      tag_125\n        /* \"src/mocks/MockStETH.sol\":2959:2963  this */\n      address\n        /* \"src/mocks/MockStETH.sol\":2966:2979  _rewardAmount */\n      dup3\n        /* \"src/mocks/MockStETH.sol\":2945:2950  _mint */\n      tag_126\n        /* \"src/mocks/MockStETH.sol\":2945:2980  _mint(address(this), _rewardAmount) */\n      jump\t// in\n    tag_125:\n        /* \"src/mocks/MockStETH.sol\":2876:2987  function distributeRewards(uint256 _rewardAmount) external {... */\n      pop\n      jump\t// out\n        /* \"src/mocks/MockStETH.sol\":1811:2163  function submit() external payable {... */\n    tag_59:\n        /* \"src/mocks/MockStETH.sol\":1876:1877  0 */\n      0x00\n        /* \"src/mocks/MockStETH.sol\":1864:1873  msg.value */\n      callvalue\n        /* \"src/mocks/MockStETH.sol\":1864:1877  msg.value > 0 */\n      gt\n        /* \"src/mocks/MockStETH.sol\":1856:1901  require(msg.value > 0, \"Cannot submit 0 ETH\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3663:3665   */\n      0x20\n        /* \"src/mocks/MockStETH.sol\":1856:1901  require(msg.value > 0, \"Cannot submit 0 ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3645:3666   */\n      mstore\n        /* \"#utility.yul\":3702:3704   */\n      0x13\n        /* \"#utility.yul\":3682:3700   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3675:3705   */\n      mstore\n      shl(0x6b, 0x086c2dcdcdee840e6eac4dad2e84060408aa89)\n        /* \"#utility.yul\":3721:3739   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3714:3763   */\n      mstore\n        /* \"#utility.yul\":3780:3798   */\n      0x64\n      add\n        /* \"src/mocks/MockStETH.sol\":1856:1901  require(msg.value > 0, \"Cannot submit 0 ETH\") */\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"src/mocks/MockStETH.sol\":1912:1932  uint256 sharesAmount */\n      0x00\n        /* \"src/mocks/MockStETH.sol\":1935:1966  getSharesByPooledEth(msg.value) */\n      tag_131\n        /* \"src/mocks/MockStETH.sol\":1956:1965  msg.value */\n      callvalue\n        /* \"src/mocks/MockStETH.sol\":1935:1955  getSharesByPooledEth */\n      tag_41\n        /* \"src/mocks/MockStETH.sol\":1935:1966  getSharesByPooledEth(msg.value) */\n      jump\t// in\n    tag_131:\n        /* \"src/mocks/MockStETH.sol\":1912:1966  uint256 sharesAmount = getSharesByPooledEth(msg.value) */\n      swap1\n      pop\n        /* \"src/mocks/MockStETH.sol\":1976:2035  _setShares(msg.sender, sharesOf(msg.sender) + sharesAmount) */\n      tag_132\n        /* \"src/mocks/MockStETH.sol\":1987:1997  msg.sender */\n      caller\n        /* \"src/mocks/MockStETH.sol\":2022:2034  sharesAmount */\n      dup3\n        /* \"src/mocks/MockStETH.sol\":1999:2019  sharesOf(msg.sender) */\n      tag_133\n        /* \"src/mocks/MockStETH.sol\":2008:2018  msg.sender */\n      caller\n        /* \"src/mocks/MockStETH.sol\":1999:2007  sharesOf */\n      tag_93\n        /* \"src/mocks/MockStETH.sol\":1999:2019  sharesOf(msg.sender) */\n      jump\t// in\n    tag_133:\n        /* \"src/mocks/MockStETH.sol\":1999:2034  sharesOf(msg.sender) + sharesAmount */\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"src/mocks/MockStETH.sol\":1976:1986  _setShares */\n      tag_136\n        /* \"src/mocks/MockStETH.sol\":1976:2035  _setShares(msg.sender, sharesOf(msg.sender) + sharesAmount) */\n      jump\t// in\n    tag_132:\n        /* \"src/mocks/MockStETH.sol\":2045:2117  TOTAL_SHARES_POSITION.setStorageUint256(getTotalShares() + sharesAmount) */\n      tag_137\n        /* \"src/mocks/MockStETH.sol\":2104:2116  sharesAmount */\n      dup2\n        /* \"src/mocks/MockStETH.sol\":2085:2101  getTotalShares() */\n      tag_138\n        /* \"src/mocks/MockStETH.sol\":2085:2099  getTotalShares */\n      tag_82\n        /* \"src/mocks/MockStETH.sol\":2085:2101  getTotalShares() */\n      jump\t// in\n    tag_138:\n        /* \"src/mocks/MockStETH.sol\":2085:2116  getTotalShares() + sharesAmount */\n      tag_139\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_139:\n        /* \"src/mocks/MockStETH.sol\":380:446  0xe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e */\n      0xe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e\n        /* \"src/mocks/DummyStorage.sol\":1263:1285  sstore(position, data) */\n      sstore\n        /* \"src/mocks/DummyStorage.sol\":1162:1301  function setStorageUint256(bytes32 position, uint256 data) internal {... */\n      jump\n        /* \"src/mocks/MockStETH.sol\":2045:2117  TOTAL_SHARES_POSITION.setStorageUint256(getTotalShares() + sharesAmount) */\n    tag_137:\n        /* \"src/mocks/MockStETH.sol\":2128:2156  _mint(msg.sender, msg.value) */\n      tag_125\n        /* \"src/mocks/MockStETH.sol\":2134:2144  msg.sender */\n      caller\n        /* \"src/mocks/MockStETH.sol\":2146:2155  msg.value */\n      callvalue\n        /* \"src/mocks/MockStETH.sol\":2128:2133  _mint */\n      tag_126\n        /* \"src/mocks/MockStETH.sol\":2128:2156  _mint(msg.sender, msg.value) */\n      jump\t// in\n        /* \"src/mocks/MockStETH.sol\":1665:1805  function balanceOf(address _account) public view override returns (uint256) {... */\n    tag_64:\n        /* \"src/mocks/MockStETH.sol\":1732:1739  uint256 */\n      0x00\n        /* \"src/mocks/MockStETH.sol\":1758:1798  getPooledEthByShares(sharesOf(_account)) */\n      tag_102\n        /* \"src/mocks/MockStETH.sol\":1779:1797  sharesOf(_account) */\n      tag_68\n        /* \"src/mocks/MockStETH.sol\":1788:1796  _account */\n      dup4\n        /* \"src/mocks/MockStETH.sol\":1779:1787  sharesOf */\n      tag_93\n        /* \"src/mocks/MockStETH.sol\":1779:1797  sharesOf(_account) */\n      jump\t// in\n        /* \"src/mocks/MockStETH.sol\":2644:2870  function getPooledEthByShares(uint256 _sharesAmount) public view returns (uint256) {... */\n    tag_69:\n        /* \"src/mocks/MockStETH.sol\":2718:2725  uint256 */\n      0x00\n        /* \"src/mocks/MockStETH.sol\":2741:2757  getTotalShares() */\n      tag_146\n        /* \"src/mocks/MockStETH.sol\":2741:2755  getTotalShares */\n      tag_82\n        /* \"src/mocks/MockStETH.sol\":2741:2757  getTotalShares() */\n      jump\t// in\n    tag_146:\n        /* \"src/mocks/MockStETH.sol\":2761:2762  0 */\n      0x00\n        /* \"src/mocks/MockStETH.sol\":2741:2762  getTotalShares() == 0 */\n      sub\n        /* \"src/mocks/MockStETH.sol\":2737:2797  if (getTotalShares() == 0) {... */\n      tag_147\n      jumpi\n      pop\n        /* \"src/mocks/MockStETH.sol\":2785:2786  0 */\n      0x00\n      swap2\n        /* \"src/mocks/MockStETH.sol\":2644:2870  function getPooledEthByShares(uint256 _sharesAmount) public view returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"src/mocks/MockStETH.sol\":2737:2797  if (getTotalShares() == 0) {... */\n    tag_147:\n        /* \"src/mocks/MockStETH.sol\":2847:2863  getTotalShares() */\n      tag_148\n        /* \"src/mocks/MockStETH.sol\":2847:2861  getTotalShares */\n      tag_82\n        /* \"src/mocks/MockStETH.sol\":2847:2863  getTotalShares() */\n      jump\t// in\n    tag_148:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"src/mocks/MockStETH.sol\":2830:2843  totalSupply() */\n      tag_112\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_78:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_105\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_122\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"src/mocks/MockStETH.sol\":2169:2290  function getTotalShares() public view returns (uint256) {... */\n    tag_82:\n        /* \"src/mocks/MockStETH.sol\":2216:2223  uint256 */\n      0x00\n        /* \"src/mocks/MockStETH.sol\":2242:2283  TOTAL_SHARES_POSITION.getStorageUint256() */\n      tag_162\n        /* \"src/mocks/MockStETH.sol\":380:446  0xe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e */\n      0xe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e\n        /* \"src/mocks/DummyStorage.sol\":696:711  sload(position) */\n      sload\n      swap1\n        /* \"src/mocks/DummyStorage.sol\":573:727  function getStorageUint256(bytes32 position) internal view returns (uint256 data) {... */\n      jump\n        /* \"src/mocks/MockStETH.sol\":2242:2283  TOTAL_SHARES_POSITION.getStorageUint256() */\n    tag_162:\n        /* \"src/mocks/MockStETH.sol\":2235:2283  return TOTAL_SHARES_POSITION.getStorageUint256() */\n      swap1\n      pop\n        /* \"src/mocks/MockStETH.sol\":2169:2290  function getTotalShares() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"src/mocks/MockStETH.sol\":2296:2406  function sharesOf(address _account) public view returns (uint256) {... */\n    tag_93:\n        /* \"src/mocks/MockStETH.sol\":2353:2360  uint256 */\n      0x00\n        /* \"src/mocks/MockStETH.sol\":2379:2399  _getShares(_account) */\n      tag_102\n        /* \"src/mocks/MockStETH.sol\":2390:2398  _account */\n      dup3\n        /* \"src/mocks/MockStETH.sol\":2379:2389  _getShares */\n      tag_167\n        /* \"src/mocks/MockStETH.sol\":2379:2399  _getShares(_account) */\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_106:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_170\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_171\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_170:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_178\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_175\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4159:4191   */\n      dup5\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4141:4192   */\n      mstore\n        /* \"#utility.yul\":4208:4226   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4201:4235   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4251:4269   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4244:4278   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4114:4132   */\n      0x64\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_129\n        /* \"#utility.yul\":3939:4284   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_175:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_178\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_171\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_178:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      dup4\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_180\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4435:4486   */\n      mstore\n        /* \"#utility.yul\":4408:4426   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      tag_129\n        /* \"#utility.yul\":4289:4492   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_183\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4435:4486   */\n      mstore\n        /* \"#utility.yul\":4408:4426   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      tag_129\n        /* \"#utility.yul\":4289:4492   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_183:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_170\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_186\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4435:4486   */\n      mstore\n        /* \"#utility.yul\":4408:4426   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      tag_129\n        /* \"#utility.yul\":4289:4492   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_188:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_190\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_186\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_190:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/mocks/MockStETH.sol\":3215:3427  function _setShares(address _account, uint256 _amount) internal {... */\n    tag_136:\n        /* \"src/mocks/MockStETH.sol\":3314:3357  abi.encodePacked(_account, SHARES_POSITION) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":4674:4676   */\n      0x60\n        /* \"#utility.yul\":4670:4685   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":4666:4719   */\n      and\n        /* \"src/mocks/MockStETH.sol\":3314:3357  abi.encodePacked(_account, SHARES_POSITION) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":4654:4720   */\n      mstore\n        /* \"src/mocks/MockStETH.sol\":1273:1303  keccak256(\"lido.StETH.shares\") */\n      0x101b73cb67a778893ea0c666939f8923c501a5d4cd59d1ecf919b502247b5b0c\n        /* \"#utility.yul\":4736:4748   */\n      0x34\n      dup3\n      add\n        /* \"#utility.yul\":4729:4757   */\n      mstore\n        /* \"src/mocks/MockStETH.sol\":3289:3301  bytes32 slot */\n      0x00\n      swap1\n        /* \"#utility.yul\":4773:4785   */\n      0x54\n      add\n        /* \"src/mocks/MockStETH.sol\":3314:3357  abi.encodePacked(_account, SHARES_POSITION) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/mocks/MockStETH.sol\":3304:3358  keccak256(abi.encodePacked(_account, SHARES_POSITION)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/mocks/MockStETH.sol\":3289:3358  bytes32 slot = keccak256(abi.encodePacked(_account, SHARES_POSITION)) */\n      swap1\n      pop\n        /* \"src/mocks/MockStETH.sol\":3368:3420  UnstructuredStorage.setStorageUint256(slot, _amount) */\n      tag_170\n        /* \"src/mocks/MockStETH.sol\":3406:3410  slot */\n      dup2\n        /* \"src/mocks/MockStETH.sol\":3412:3419  _amount */\n      dup4\n        /* \"src/mocks/DummyStorage.sol\":1263:1285  sstore(position, data) */\n      swap1\n      sstore\n        /* \"src/mocks/DummyStorage.sol\":1162:1301  function setStorageUint256(bytes32 position, uint256 data) internal {... */\n      jump\n        /* \"src/mocks/MockStETH.sol\":2993:3209  function _getShares(address _account) internal view returns (uint256) {... */\n    tag_167:\n        /* \"src/mocks/MockStETH.sol\":3098:3141  abi.encodePacked(_account, SHARES_POSITION) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":4674:4676   */\n      0x60\n        /* \"#utility.yul\":4670:4685   */\n      dup4\n      swap1\n      shl\n        /* \"#utility.yul\":4666:4719   */\n      and\n        /* \"src/mocks/MockStETH.sol\":3098:3141  abi.encodePacked(_account, SHARES_POSITION) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":4654:4720   */\n      mstore\n        /* \"src/mocks/MockStETH.sol\":1273:1303  keccak256(\"lido.StETH.shares\") */\n      0x101b73cb67a778893ea0c666939f8923c501a5d4cd59d1ecf919b502247b5b0c\n        /* \"#utility.yul\":4736:4748   */\n      0x34\n      dup3\n      add\n        /* \"#utility.yul\":4729:4757   */\n      mstore\n        /* \"src/mocks/MockStETH.sol\":3054:3061  uint256 */\n      0x00\n      swap1\n      dup2\n      swap1\n        /* \"#utility.yul\":4773:4785   */\n      0x54\n      add\n        /* \"src/mocks/MockStETH.sol\":3098:3141  abi.encodePacked(_account, SHARES_POSITION) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/mocks/MockStETH.sol\":3088:3142  keccak256(abi.encodePacked(_account, SHARES_POSITION)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/mocks/MockStETH.sol\":3073:3142  bytes32 slot = keccak256(abi.encodePacked(_account, SHARES_POSITION)) */\n      swap1\n      pop\n        /* \"src/mocks/MockStETH.sol\":3159:3202  UnstructuredStorage.getStorageUint256(slot) */\n      tag_199\n        /* \"src/mocks/MockStETH.sol\":3197:3201  slot */\n      dup2\n        /* \"src/mocks/DummyStorage.sol\":696:711  sload(position) */\n      sload\n      swap1\n        /* \"src/mocks/DummyStorage.sol\":573:727  function getStorageUint256(bytes32 position) internal view returns (uint256 data) {... */\n      jump\n        /* \"src/mocks/MockStETH.sol\":3159:3202  UnstructuredStorage.getStorageUint256(slot) */\n    tag_199:\n        /* \"src/mocks/MockStETH.sol\":3152:3202  return UnstructuredStorage.getStorageUint256(slot) */\n      swap4\n        /* \"src/mocks/MockStETH.sol\":2993:3209  function _getShares(address _account) internal view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      dup5\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_201\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4435:4486   */\n      mstore\n        /* \"#utility.yul\":4408:4426   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      tag_129\n        /* \"#utility.yul\":4289:4492   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      dup4\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_203\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4435:4486   */\n      mstore\n        /* \"#utility.yul\":4408:4426   */\n      0x24\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      tag_129\n        /* \"#utility.yul\":4289:4492   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_178\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_206\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      dup4\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_208\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_209\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_209:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_210\n      swap1\n      pop\n      jump\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      dup4\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4159:4191   */\n      dup6\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4141:4192   */\n      mstore\n        /* \"#utility.yul\":4208:4226   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4201:4235   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4251:4269   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4244:4278   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4114:4132   */\n      0x64\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_129\n        /* \"#utility.yul\":3939:4284   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup5\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_214)\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_214:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_215\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:432   */\n    tag_24:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_216:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      0x00\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_221:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_28:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      0x00\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      0x00\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_223:\n        /* \"#utility.yul\":783:812   */\n      tag_224\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_216\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1520   */\n    tag_40:\n        /* \"#utility.yul\":1353:1359   */\n      0x00\n        /* \"#utility.yul\":1406:1408   */\n      0x20\n        /* \"#utility.yul\":1394:1403   */\n      dup3\n        /* \"#utility.yul\":1385:1392   */\n      dup5\n        /* \"#utility.yul\":1381:1404   */\n      sub\n        /* \"#utility.yul\":1377:1409   */\n      slt\n        /* \"#utility.yul\":1374:1426   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":1422:1423   */\n      0x00\n        /* \"#utility.yul\":1419:1420   */\n      0x00\n        /* \"#utility.yul\":1412:1424   */\n      revert\n        /* \"#utility.yul\":1374:1426   */\n    tag_228:\n      pop\n        /* \"#utility.yul\":1467:1490   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1294:1520   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1525:1899   */\n    tag_46:\n        /* \"#utility.yul\":1602:1608   */\n      0x00\n        /* \"#utility.yul\":1610:1616   */\n      0x00\n        /* \"#utility.yul\":1618:1624   */\n      0x00\n        /* \"#utility.yul\":1671:1673   */\n      0x60\n        /* \"#utility.yul\":1659:1668   */\n      dup5\n        /* \"#utility.yul\":1650:1657   */\n      dup7\n        /* \"#utility.yul\":1646:1669   */\n      sub\n        /* \"#utility.yul\":1642:1674   */\n      slt\n        /* \"#utility.yul\":1639:1691   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":1687:1688   */\n      0x00\n        /* \"#utility.yul\":1684:1685   */\n      0x00\n        /* \"#utility.yul\":1677:1689   */\n      revert\n        /* \"#utility.yul\":1639:1691   */\n    tag_230:\n        /* \"#utility.yul\":1710:1739   */\n      tag_231\n        /* \"#utility.yul\":1729:1738   */\n      dup5\n        /* \"#utility.yul\":1710:1739   */\n      tag_216\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1700:1739   */\n      swap3\n      pop\n        /* \"#utility.yul\":1758:1796   */\n      tag_232\n        /* \"#utility.yul\":1792:1794   */\n      0x20\n        /* \"#utility.yul\":1781:1790   */\n      dup6\n        /* \"#utility.yul\":1777:1795   */\n      add\n        /* \"#utility.yul\":1758:1796   */\n      tag_216\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1525:1899   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1748:1796   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1865:1867   */\n      0x40\n        /* \"#utility.yul\":1850:1868   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1837:1869   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1525:1899   */\n      jump\t// out\n        /* \"#utility.yul\":2093:2279   */\n    tag_63:\n        /* \"#utility.yul\":2152:2158   */\n      0x00\n        /* \"#utility.yul\":2205:2207   */\n      0x20\n        /* \"#utility.yul\":2193:2202   */\n      dup3\n        /* \"#utility.yul\":2184:2191   */\n      dup5\n        /* \"#utility.yul\":2180:2203   */\n      sub\n        /* \"#utility.yul\":2176:2208   */\n      slt\n        /* \"#utility.yul\":2173:2225   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":2221:2222   */\n      0x00\n        /* \"#utility.yul\":2218:2219   */\n      0x00\n        /* \"#utility.yul\":2211:2223   */\n      revert\n        /* \"#utility.yul\":2173:2225   */\n    tag_235:\n        /* \"#utility.yul\":2244:2273   */\n      tag_199\n        /* \"#utility.yul\":2263:2272   */\n      dup3\n        /* \"#utility.yul\":2244:2273   */\n      tag_216\n      jump\t// in\n        /* \"#utility.yul\":2284:2544   */\n    tag_87:\n        /* \"#utility.yul\":2352:2358   */\n      0x00\n        /* \"#utility.yul\":2360:2366   */\n      0x00\n        /* \"#utility.yul\":2413:2415   */\n      0x40\n        /* \"#utility.yul\":2401:2410   */\n      dup4\n        /* \"#utility.yul\":2392:2399   */\n      dup6\n        /* \"#utility.yul\":2388:2411   */\n      sub\n        /* \"#utility.yul\":2384:2416   */\n      slt\n        /* \"#utility.yul\":2381:2433   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":2429:2430   */\n      0x00\n        /* \"#utility.yul\":2426:2427   */\n      0x00\n        /* \"#utility.yul\":2419:2431   */\n      revert\n        /* \"#utility.yul\":2381:2433   */\n    tag_238:\n        /* \"#utility.yul\":2452:2481   */\n      tag_239\n        /* \"#utility.yul\":2471:2480   */\n      dup4\n        /* \"#utility.yul\":2452:2481   */\n      tag_216\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2442:2481   */\n      swap2\n      pop\n        /* \"#utility.yul\":2500:2538   */\n      tag_240\n        /* \"#utility.yul\":2534:2536   */\n      0x20\n        /* \"#utility.yul\":2523:2532   */\n      dup5\n        /* \"#utility.yul\":2519:2537   */\n      add\n        /* \"#utility.yul\":2500:2538   */\n      tag_216\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2490:2538   */\n      swap1\n      pop\n        /* \"#utility.yul\":2284:2544   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2549:2929   */\n    tag_97:\n        /* \"#utility.yul\":2628:2629   */\n      0x01\n        /* \"#utility.yul\":2624:2636   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2671:2683   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2692:2753   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":2746:2750   */\n      0x7f\n        /* \"#utility.yul\":2738:2744   */\n      dup3\n        /* \"#utility.yul\":2734:2751   */\n      and\n        /* \"#utility.yul\":2724:2751   */\n      swap2\n      pop\n        /* \"#utility.yul\":2692:2753   */\n    tag_242:\n        /* \"#utility.yul\":2799:2801   */\n      0x20\n        /* \"#utility.yul\":2791:2797   */\n      dup3\n        /* \"#utility.yul\":2788:2802   */\n      lt\n        /* \"#utility.yul\":2768:2786   */\n      dup2\n        /* \"#utility.yul\":2765:2803   */\n      sub\n        /* \"#utility.yul\":2762:2923   */\n      tag_243\n      jumpi\n        /* \"#utility.yul\":2845:2855   */\n      0x4e487b71\n        /* \"#utility.yul\":2840:2843   */\n      0xe0\n        /* \"#utility.yul\":2836:2856   */\n      shl\n        /* \"#utility.yul\":2833:2834   */\n      0x00\n        /* \"#utility.yul\":2826:2857   */\n      mstore\n        /* \"#utility.yul\":2880:2884   */\n      0x22\n        /* \"#utility.yul\":2877:2878   */\n      0x04\n        /* \"#utility.yul\":2870:2885   */\n      mstore\n        /* \"#utility.yul\":2908:2912   */\n      0x24\n        /* \"#utility.yul\":2905:2906   */\n      0x00\n        /* \"#utility.yul\":2898:2913   */\n      revert\n        /* \"#utility.yul\":2762:2923   */\n    tag_243:\n      pop\n        /* \"#utility.yul\":2549:2929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2934:3061   */\n    tag_217:\n        /* \"#utility.yul\":2995:3005   */\n      0x4e487b71\n        /* \"#utility.yul\":2990:2993   */\n      0xe0\n        /* \"#utility.yul\":2986:3006   */\n      shl\n        /* \"#utility.yul\":2983:2984   */\n      0x00\n        /* \"#utility.yul\":2976:3007   */\n      mstore\n        /* \"#utility.yul\":3026:3030   */\n      0x11\n        /* \"#utility.yul\":3023:3024   */\n      0x04\n        /* \"#utility.yul\":3016:3031   */\n      mstore\n        /* \"#utility.yul\":3050:3054   */\n      0x24\n        /* \"#utility.yul\":3047:3048   */\n      0x00\n        /* \"#utility.yul\":3040:3055   */\n      revert\n        /* \"#utility.yul\":3066:3234   */\n    tag_114:\n        /* \"#utility.yul\":3139:3148   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3170:3179   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3187:3202   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3181:3203   */\n      dup5\n      eq\n        /* \"#utility.yul\":3167:3204   */\n      or\n        /* \"#utility.yul\":3157:3228   */\n      tag_102\n      jumpi\n        /* \"#utility.yul\":3208:3226   */\n      tag_102\n      tag_217\n      jump\t// in\n        /* \"#utility.yul\":3239:3456   */\n    tag_116:\n        /* \"#utility.yul\":3279:3280   */\n      0x00\n        /* \"#utility.yul\":3305:3306   */\n      dup3\n        /* \"#utility.yul\":3295:3427   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":3349:3359   */\n      0x4e487b71\n        /* \"#utility.yul\":3344:3347   */\n      0xe0\n        /* \"#utility.yul\":3340:3360   */\n      shl\n        /* \"#utility.yul\":3337:3338   */\n      0x00\n        /* \"#utility.yul\":3330:3361   */\n      mstore\n        /* \"#utility.yul\":3384:3388   */\n      0x12\n        /* \"#utility.yul\":3381:3382   */\n      0x04\n        /* \"#utility.yul\":3374:3389   */\n      mstore\n        /* \"#utility.yul\":3412:3416   */\n      0x24\n        /* \"#utility.yul\":3409:3410   */\n      0x00\n        /* \"#utility.yul\":3402:3417   */\n      revert\n        /* \"#utility.yul\":3295:3427   */\n    tag_249:\n      pop\n        /* \"#utility.yul\":3441:3450   */\n      div\n      swap1\n        /* \"#utility.yul\":3239:3456   */\n      jump\t// out\n        /* \"#utility.yul\":3809:3934   */\n    tag_135:\n        /* \"#utility.yul\":3874:3883   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3895:3905   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3892:3928   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":3908:3926   */\n      tag_102\n      tag_217\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220ab6584cabb7d0a805f94160f17e56b31c32700f3d282db8a8326a3ff51cb0efe64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_969": {
									"entryPoint": null,
									"id": 969,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 224,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setShares_1164": {
									"entryPoint": 285,
									"id": 1164,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 400,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setStorageUint256_879": {
									"entryPoint": 396,
									"id": 879,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_bytes32__to_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 770,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3910:8",
										"nodeType": "YulBlock",
										"src": "0:3910:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:8",
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:8",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:8",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:8",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nativeSrc": "66:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nativeSrc": "56:31:8",
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nativeSrc": "56:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:8",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:8",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nativeSrc": "96:15:8",
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nativeSrc": "96:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:8",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:8",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nativeSrc": "120:15:8",
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nativeSrc": "120:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nativeSrc": "201:325:8",
													"nodeType": "YulBlock",
													"src": "201:325:8",
													"statements": [
														{
															"nativeSrc": "211:22:8",
															"nodeType": "YulAssignment",
															"src": "211:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:8",
																		"nodeType": "YulLiteral",
																		"src": "225:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:8"
																},
																"nativeSrc": "221:12:8",
																"nodeType": "YulFunctionCall",
																"src": "221:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:8"
																}
															]
														},
														{
															"nativeSrc": "242:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:8",
																		"nodeType": "YulLiteral",
																		"src": "278:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:8"
																},
																"nativeSrc": "268:12:8",
																"nodeType": "YulFunctionCall",
																"src": "268:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:8",
																	"nodeType": "YulTypedName",
																	"src": "246:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:8",
																"nodeType": "YulBlock",
																"src": "319:31:8",
																"statements": [
																	{
																		"nativeSrc": "321:27:8",
																		"nodeType": "YulAssignment",
																		"src": "321:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:8",
																					"nodeType": "YulLiteral",
																					"src": "343:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:8"
																			},
																			"nativeSrc": "331:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:8"
																},
																"nativeSrc": "292:26:8",
																"nodeType": "YulFunctionCall",
																"src": "292:26:8"
															},
															"nativeSrc": "289:61:8",
															"nodeType": "YulIf",
															"src": "289:61:8"
														},
														{
															"body": {
																"nativeSrc": "409:111:8",
																"nodeType": "YulBlock",
																"src": "409:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:8",
																					"nodeType": "YulLiteral",
																					"src": "430:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:8",
																							"nodeType": "YulLiteral",
																							"src": "437:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:8",
																							"nodeType": "YulLiteral",
																							"src": "442:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:8"
																					},
																					"nativeSrc": "433:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:8"
																			},
																			"nativeSrc": "423:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:8"
																		},
																		"nativeSrc": "423:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:8",
																					"nodeType": "YulLiteral",
																					"src": "474:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:8",
																					"nodeType": "YulLiteral",
																					"src": "477:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:8"
																			},
																			"nativeSrc": "467:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:8"
																		},
																		"nativeSrc": "467:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:8",
																					"nodeType": "YulLiteral",
																					"src": "502:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:8",
																					"nodeType": "YulLiteral",
																					"src": "505:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:8"
																			},
																			"nativeSrc": "495:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:8"
																		},
																		"nativeSrc": "495:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:8",
																				"nodeType": "YulLiteral",
																				"src": "396:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:8"
																		},
																		"nativeSrc": "385:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:8"
																},
																"nativeSrc": "362:38:8",
																"nodeType": "YulFunctionCall",
																"src": "362:38:8"
															},
															"nativeSrc": "359:161:8",
															"nodeType": "YulIf",
															"src": "359:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:8",
														"nodeType": "YulTypedName",
														"src": "181:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:8",
														"nodeType": "YulTypedName",
														"src": "190:6:8",
														"type": ""
													}
												],
												"src": "146:380:8"
											},
											{
												"body": {
													"nativeSrc": "587:65:8",
													"nodeType": "YulBlock",
													"src": "587:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:8",
																		"nodeType": "YulLiteral",
																		"src": "604:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:8"
																},
																"nativeSrc": "597:14:8",
																"nodeType": "YulFunctionCall",
																"src": "597:14:8"
															},
															"nativeSrc": "597:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:8"
														},
														{
															"nativeSrc": "620:26:8",
															"nodeType": "YulAssignment",
															"src": "620:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:8",
																		"nodeType": "YulLiteral",
																		"src": "638:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:8",
																		"nodeType": "YulLiteral",
																		"src": "641:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:8"
																},
																"nativeSrc": "628:18:8",
																"nodeType": "YulFunctionCall",
																"src": "628:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:8",
														"nodeType": "YulTypedName",
														"src": "570:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:8",
														"nodeType": "YulTypedName",
														"src": "578:4:8",
														"type": ""
													}
												],
												"src": "531:121:8"
											},
											{
												"body": {
													"nativeSrc": "738:437:8",
													"nodeType": "YulBlock",
													"src": "738:437:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:8",
																"nodeType": "YulBlock",
																"src": "771:398:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:8",
																					"nodeType": "YulLiteral",
																					"src": "792:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:8"
																			},
																			"nativeSrc": "785:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:8"
																		},
																		"nativeSrc": "785:16:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:8"
																	},
																	{
																		"nativeSrc": "814:30:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:8",
																					"nodeType": "YulLiteral",
																					"src": "836:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:8",
																					"nodeType": "YulLiteral",
																					"src": "839:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:8"
																			},
																			"nativeSrc": "826:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:8",
																				"nodeType": "YulTypedName",
																				"src": "818:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:8",
																							"nodeType": "YulLiteral",
																							"src": "890:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:8",
																									"nodeType": "YulLiteral",
																									"src": "909:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:8"
																							},
																							"nativeSrc": "893:19:8",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:8"
																					},
																					"nativeSrc": "886:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:8"
																			},
																			"nativeSrc": "876:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:8",
																				"nodeType": "YulTypedName",
																				"src": "861:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:8",
																			"nodeType": "YulBlock",
																			"src": "951:23:8",
																			"statements": [
																				{
																					"nativeSrc": "953:19:8",
																					"nodeType": "YulAssignment",
																					"src": "953:19:8",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:8",
																					"nodeType": "YulLiteral",
																					"src": "945:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:8"
																			},
																			"nativeSrc": "930:20:8",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:8"
																		},
																		"nativeSrc": "927:47:8",
																		"nodeType": "YulIf",
																		"src": "927:47:8"
																	},
																	{
																		"nativeSrc": "987:41:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:8",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:8",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:8"
																							},
																							"nativeSrc": "1014:12:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:8"
																					},
																					"nativeSrc": "1007:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:8"
																			},
																			"nativeSrc": "997:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:8"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:8",
																				"nodeType": "YulTypedName",
																				"src": "991:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:8",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:8",
																			"nodeType": "YulBlock",
																			"src": "1139:20:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:8"
																						},
																						"nativeSrc": "1141:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:8"
																					},
																					"nativeSrc": "1141:16:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:8"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:8"
																			},
																			"nativeSrc": "1086:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:8"
																		},
																		"nativeSrc": "1078:81:8",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:8",
																			"nodeType": "YulBlock",
																			"src": "1100:26:8",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:8",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:8"
																						},
																						"nativeSrc": "1111:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:8",
																			"nodeType": "YulBlock",
																			"src": "1082:3:8",
																			"statements": []
																		},
																		"src": "1078:81:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:8",
																		"nodeType": "YulLiteral",
																		"src": "759:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:8"
																},
																"nativeSrc": "751:11:8",
																"nodeType": "YulFunctionCall",
																"src": "751:11:8"
															},
															"nativeSrc": "748:421:8",
															"nodeType": "YulIf",
															"src": "748:421:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:8",
														"nodeType": "YulTypedName",
														"src": "710:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:8",
														"nodeType": "YulTypedName",
														"src": "717:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:8",
														"nodeType": "YulTypedName",
														"src": "722:10:8",
														"type": ""
													}
												],
												"src": "657:518:8"
											},
											{
												"body": {
													"nativeSrc": "1265:81:8",
													"nodeType": "YulBlock",
													"src": "1265:81:8",
													"statements": [
														{
															"nativeSrc": "1275:65:8",
															"nodeType": "YulAssignment",
															"src": "1275:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:8"
																								},
																								"nativeSrc": "1304:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:8"
																								},
																								"nativeSrc": "1317:6:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:8"
																						},
																						"nativeSrc": "1300:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:8"
																				},
																				"nativeSrc": "1296:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:8"
																		},
																		"nativeSrc": "1286:40:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:8"
																		},
																		"nativeSrc": "1328:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:8"
																},
																"nativeSrc": "1283:57:8",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:8",
														"nodeType": "YulTypedName",
														"src": "1242:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:8",
														"nodeType": "YulTypedName",
														"src": "1248:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:8",
														"nodeType": "YulTypedName",
														"src": "1256:4:8",
														"type": ""
													}
												],
												"src": "1180:166:8"
											},
											{
												"body": {
													"nativeSrc": "1447:1203:8",
													"nodeType": "YulBlock",
													"src": "1447:1203:8",
													"statements": [
														{
															"nativeSrc": "1457:24:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:8"
																},
																"nativeSrc": "1471:10:8",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:8",
																"nodeType": "YulBlock",
																"src": "1524:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:8"
																			},
																			"nativeSrc": "1526:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:8"
																		},
																		"nativeSrc": "1526:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:8"
																				},
																				"nativeSrc": "1508:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:8"
																		},
																		"nativeSrc": "1504:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:8"
																},
																"nativeSrc": "1493:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:8"
															},
															"nativeSrc": "1490:56:8",
															"nodeType": "YulIf",
															"src": "1490:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:8"
																				},
																				"nativeSrc": "1631:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:8",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:8"
																		},
																		"nativeSrc": "1605:38:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:8"
																},
																"nativeSrc": "1555:97:8",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:8"
															},
															"nativeSrc": "1555:97:8",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:8"
														},
														{
															"nativeSrc": "1661:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:8",
																"nodeType": "YulLiteral",
																"src": "1678:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:8",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:17:8",
															"nodeType": "YulAssignment",
															"src": "1688:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1701:4:8",
																"nodeType": "YulLiteral",
																"src": "1701:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1688:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1688:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1751:642:8",
																		"nodeType": "YulBlock",
																		"src": "1751:642:8",
																		"statements": [
																			{
																				"nativeSrc": "1765:35:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1765:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1784:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "1784:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1796:2:8",
																									"nodeType": "YulLiteral",
																									"src": "1796:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1792:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:8"
																							},
																							"nativeSrc": "1792:7:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1780:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1780:3:8"
																					},
																					"nativeSrc": "1780:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1780:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1769:7:8",
																						"nodeType": "YulTypedName",
																						"src": "1769:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1813:49:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1813:49:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1857:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "1857:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1827:29:8",
																						"nodeType": "YulIdentifier",
																						"src": "1827:29:8"
																					},
																					"nativeSrc": "1827:35:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1827:35:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1817:6:8",
																						"nodeType": "YulTypedName",
																						"src": "1817:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1875:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1875:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1884:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1879:1:8",
																						"nodeType": "YulTypedName",
																						"src": "1879:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1955:165:8",
																					"nodeType": "YulBlock",
																					"src": "1955:165:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "1980:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "1980:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "1998:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "1998:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2003:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "2003:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1994:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "1994:3:8"
																												},
																												"nativeSrc": "1994:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "1994:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1988:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "1988:5:8"
																										},
																										"nativeSrc": "1988:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "1988:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "1973:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "1973:6:8"
																								},
																								"nativeSrc": "1973:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1973:42:8"
																							},
																							"nativeSrc": "1973:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "1973:42:8"
																						},
																						{
																							"nativeSrc": "2032:24:8",
																							"nodeType": "YulAssignment",
																							"src": "2032:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2046:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2046:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2054:1:8",
																										"nodeType": "YulLiteral",
																										"src": "2054:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2042:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2042:3:8"
																								},
																								"nativeSrc": "2042:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2042:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2032:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2032:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2073:33:8",
																							"nodeType": "YulAssignment",
																							"src": "2073:33:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2090:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "2090:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2101:4:8",
																										"nodeType": "YulLiteral",
																										"src": "2101:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2086:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2086:3:8"
																								},
																								"nativeSrc": "2086:20:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2086:20:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2073:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "2073:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1909:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "1909:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1912:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "1912:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1906:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "1906:2:8"
																					},
																					"nativeSrc": "1906:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1906:14:8"
																				},
																				"nativeSrc": "1898:222:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1921:21:8",
																					"nodeType": "YulBlock",
																					"src": "1921:21:8",
																					"statements": [
																						{
																							"nativeSrc": "1923:17:8",
																							"nodeType": "YulAssignment",
																							"src": "1923:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1932:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "1932:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1935:4:8",
																										"nodeType": "YulLiteral",
																										"src": "1935:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1928:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1928:3:8"
																								},
																								"nativeSrc": "1928:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1928:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1923:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "1923:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1902:3:8",
																					"nodeType": "YulBlock",
																					"src": "1902:3:8",
																					"statements": []
																				},
																				"src": "1898:222:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "2168:166:8",
																					"nodeType": "YulBlock",
																					"src": "2168:166:8",
																					"statements": [
																						{
																							"nativeSrc": "2186:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2186:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2213:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "2213:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2218:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2218:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2209:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2209:3:8"
																										},
																										"nativeSrc": "2209:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2209:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2203:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2203:5:8"
																								},
																								"nativeSrc": "2203:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2203:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2190:9:8",
																									"nodeType": "YulTypedName",
																									"src": "2190:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2253:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2253:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2265:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2265:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2292:1:8",
																																				"nodeType": "YulLiteral",
																																				"src": "2292:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2295:6:8",
																																				"nodeType": "YulIdentifier",
																																				"src": "2295:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2288:3:8",
																																			"nodeType": "YulIdentifier",
																																			"src": "2288:3:8"
																																		},
																																		"nativeSrc": "2288:14:8",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2288:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2304:3:8",
																																		"nodeType": "YulLiteral",
																																		"src": "2304:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2284:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "2284:3:8"
																																},
																																"nativeSrc": "2284:24:8",
																																"nodeType": "YulFunctionCall",
																																"src": "2284:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2314:1:8",
																																		"nodeType": "YulLiteral",
																																		"src": "2314:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2310:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "2310:3:8"
																																},
																																"nativeSrc": "2310:6:8",
																																"nodeType": "YulFunctionCall",
																																"src": "2310:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2280:3:8",
																															"nodeType": "YulIdentifier",
																															"src": "2280:3:8"
																														},
																														"nativeSrc": "2280:37:8",
																														"nodeType": "YulFunctionCall",
																														"src": "2280:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2276:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "2276:3:8"
																												},
																												"nativeSrc": "2276:42:8",
																												"nodeType": "YulFunctionCall",
																												"src": "2276:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2261:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2261:3:8"
																										},
																										"nativeSrc": "2261:58:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2261:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2246:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2246:6:8"
																								},
																								"nativeSrc": "2246:74:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2246:74:8"
																							},
																							"nativeSrc": "2246:74:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "2246:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2139:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "2139:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2148:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "2148:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2136:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2136:2:8"
																					},
																					"nativeSrc": "2136:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2136:19:8"
																				},
																				"nativeSrc": "2133:201:8",
																				"nodeType": "YulIf",
																				"src": "2133:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2354:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2354:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2368:1:8",
																											"nodeType": "YulLiteral",
																											"src": "2368:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2371:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "2371:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2364:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "2364:3:8"
																									},
																									"nativeSrc": "2364:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "2364:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2380:1:8",
																									"nodeType": "YulLiteral",
																									"src": "2380:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2360:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2360:3:8"
																							},
																							"nativeSrc": "2360:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2360:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2347:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2347:6:8"
																					},
																					"nativeSrc": "2347:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2347:36:8"
																				},
																				"nativeSrc": "2347:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "2347:36:8"
																			}
																		]
																	},
																	"nativeSrc": "1744:649:8",
																	"nodeType": "YulCase",
																	"src": "1744:649:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1749:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2410:234:8",
																		"nodeType": "YulBlock",
																		"src": "2410:234:8",
																		"statements": [
																			{
																				"nativeSrc": "2424:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2424:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2437:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2428:5:8",
																						"nodeType": "YulTypedName",
																						"src": "2428:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2473:67:8",
																					"nodeType": "YulBlock",
																					"src": "2473:67:8",
																					"statements": [
																						{
																							"nativeSrc": "2491:35:8",
																							"nodeType": "YulAssignment",
																							"src": "2491:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2510:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "2510:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2515:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2515:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2506:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2506:3:8"
																										},
																										"nativeSrc": "2506:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2506:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2500:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2500:5:8"
																								},
																								"nativeSrc": "2500:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2500:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2491:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2491:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2454:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2454:6:8"
																				},
																				"nativeSrc": "2451:89:8",
																				"nodeType": "YulIf",
																				"src": "2451:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2560:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2560:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2619:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2619:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2626:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2626:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2566:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "2566:52:8"
																							},
																							"nativeSrc": "2566:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2566:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2553:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2553:6:8"
																					},
																					"nativeSrc": "2553:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2553:81:8"
																				},
																				"nativeSrc": "2553:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "2553:81:8"
																			}
																		]
																	},
																	"nativeSrc": "2402:242:8",
																	"nodeType": "YulCase",
																	"src": "2402:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1724:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1724:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1721:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:8"
																},
																"nativeSrc": "1721:14:8",
																"nodeType": "YulFunctionCall",
																"src": "1721:14:8"
															},
															"nativeSrc": "1714:930:8",
															"nodeType": "YulSwitch",
															"src": "1714:930:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1299:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:8",
														"nodeType": "YulTypedName",
														"src": "1432:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:8",
														"nodeType": "YulTypedName",
														"src": "1438:3:8",
														"type": ""
													}
												],
												"src": "1351:1299:8"
											},
											{
												"body": {
													"nativeSrc": "2756:102:8",
													"nodeType": "YulBlock",
													"src": "2756:102:8",
													"statements": [
														{
															"nativeSrc": "2766:26:8",
															"nodeType": "YulAssignment",
															"src": "2766:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2778:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2778:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2789:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2789:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2774:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2774:3:8"
																},
																"nativeSrc": "2774:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2774:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2766:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2766:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2808:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2808:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2823:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2823:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2839:3:8",
																								"nodeType": "YulLiteral",
																								"src": "2839:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2844:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2844:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2835:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2835:3:8"
																						},
																						"nativeSrc": "2835:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2835:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2848:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2848:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2831:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2831:3:8"
																				},
																				"nativeSrc": "2831:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2831:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2819:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2819:3:8"
																		},
																		"nativeSrc": "2819:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2819:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2801:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:8"
																},
																"nativeSrc": "2801:51:8",
																"nodeType": "YulFunctionCall",
																"src": "2801:51:8"
															},
															"nativeSrc": "2801:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "2801:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2655:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2725:9:8",
														"nodeType": "YulTypedName",
														"src": "2725:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2736:6:8",
														"nodeType": "YulTypedName",
														"src": "2736:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2747:4:8",
														"nodeType": "YulTypedName",
														"src": "2747:4:8",
														"type": ""
													}
												],
												"src": "2655:203:8"
											},
											{
												"body": {
													"nativeSrc": "3010:139:8",
													"nodeType": "YulBlock",
													"src": "3010:139:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3027:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3027:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3040:2:8",
																						"nodeType": "YulLiteral",
																						"src": "3040:2:8",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nativeSrc": "3044:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3044:6:8"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3036:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3036:3:8"
																				},
																				"nativeSrc": "3036:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3036:15:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3065:2:8",
																										"nodeType": "YulLiteral",
																										"src": "3065:2:8",
																										"type": "",
																										"value": "96"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3069:1:8",
																										"nodeType": "YulLiteral",
																										"src": "3069:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3061:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3061:3:8"
																								},
																								"nativeSrc": "3061:10:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3061:10:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3073:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3073:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "3057:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3057:3:8"
																						},
																						"nativeSrc": "3057:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3057:18:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3053:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3053:3:8"
																				},
																				"nativeSrc": "3053:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3053:23:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3032:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3032:3:8"
																		},
																		"nativeSrc": "3032:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3032:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3020:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3020:6:8"
																},
																"nativeSrc": "3020:58:8",
																"nodeType": "YulFunctionCall",
																"src": "3020:58:8"
															},
															"nativeSrc": "3020:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "3020:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3098:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3098:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3103:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3103:2:8",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3094:3:8"
																		},
																		"nativeSrc": "3094:12:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3094:12:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3108:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3108:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3087:6:8"
																},
																"nativeSrc": "3087:28:8",
																"nodeType": "YulFunctionCall",
																"src": "3087:28:8"
															},
															"nativeSrc": "3087:28:8",
															"nodeType": "YulExpressionStatement",
															"src": "3087:28:8"
														},
														{
															"nativeSrc": "3124:19:8",
															"nodeType": "YulAssignment",
															"src": "3124:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3135:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3135:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3140:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3140:2:8",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3131:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3131:3:8"
																},
																"nativeSrc": "3131:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3131:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3124:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3124:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_bytes32__to_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2863:286:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2978:3:8",
														"nodeType": "YulTypedName",
														"src": "2978:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2983:6:8",
														"nodeType": "YulTypedName",
														"src": "2983:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2991:6:8",
														"nodeType": "YulTypedName",
														"src": "2991:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3002:3:8",
														"nodeType": "YulTypedName",
														"src": "3002:3:8",
														"type": ""
													}
												],
												"src": "2863:286:8"
											},
											{
												"body": {
													"nativeSrc": "3202:174:8",
													"nodeType": "YulBlock",
													"src": "3202:174:8",
													"statements": [
														{
															"nativeSrc": "3212:16:8",
															"nodeType": "YulAssignment",
															"src": "3212:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3223:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3223:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3226:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3226:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3219:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3219:3:8"
																},
																"nativeSrc": "3219:9:8",
																"nodeType": "YulFunctionCall",
																"src": "3219:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3212:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3212:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3259:111:8",
																"nodeType": "YulBlock",
																"src": "3259:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3280:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3280:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3287:3:8",
																							"nodeType": "YulLiteral",
																							"src": "3287:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3292:10:8",
																							"nodeType": "YulLiteral",
																							"src": "3292:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3283:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3283:3:8"
																					},
																					"nativeSrc": "3283:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3283:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3273:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3273:6:8"
																			},
																			"nativeSrc": "3273:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3273:31:8"
																		},
																		"nativeSrc": "3273:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3273:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3324:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3324:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3327:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3327:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3317:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3317:6:8"
																			},
																			"nativeSrc": "3317:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3317:15:8"
																		},
																		"nativeSrc": "3317:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3317:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3352:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3352:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3355:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3355:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3345:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3345:6:8"
																			},
																			"nativeSrc": "3345:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3345:15:8"
																		},
																		"nativeSrc": "3345:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3345:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3243:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3243:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3246:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3246:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3240:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3240:2:8"
																},
																"nativeSrc": "3240:10:8",
																"nodeType": "YulFunctionCall",
																"src": "3240:10:8"
															},
															"nativeSrc": "3237:133:8",
															"nodeType": "YulIf",
															"src": "3237:133:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3154:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3185:1:8",
														"nodeType": "YulTypedName",
														"src": "3185:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3188:1:8",
														"nodeType": "YulTypedName",
														"src": "3188:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3194:3:8",
														"nodeType": "YulTypedName",
														"src": "3194:3:8",
														"type": ""
													}
												],
												"src": "3154:222:8"
											},
											{
												"body": {
													"nativeSrc": "3538:188:8",
													"nodeType": "YulBlock",
													"src": "3538:188:8",
													"statements": [
														{
															"nativeSrc": "3548:26:8",
															"nodeType": "YulAssignment",
															"src": "3548:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3560:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3560:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3571:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3571:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3556:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3556:3:8"
																},
																"nativeSrc": "3556:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3556:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3548:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3548:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3590:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3590:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3605:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3605:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3621:3:8",
																								"nodeType": "YulLiteral",
																								"src": "3621:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3626:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3626:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3617:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3617:3:8"
																						},
																						"nativeSrc": "3617:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3617:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3630:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3630:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3613:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3613:3:8"
																				},
																				"nativeSrc": "3613:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3613:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3601:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3601:3:8"
																		},
																		"nativeSrc": "3601:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3601:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3583:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3583:6:8"
																},
																"nativeSrc": "3583:51:8",
																"nodeType": "YulFunctionCall",
																"src": "3583:51:8"
															},
															"nativeSrc": "3583:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "3583:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3654:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3654:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3665:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3665:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3650:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:8"
																		},
																		"nativeSrc": "3650:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3650:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3670:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3670:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3643:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:8"
																},
																"nativeSrc": "3643:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3643:34:8"
															},
															"nativeSrc": "3643:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3643:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3697:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3697:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3708:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3708:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3693:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3693:3:8"
																		},
																		"nativeSrc": "3693:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3693:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3713:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3713:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3686:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3686:6:8"
																},
																"nativeSrc": "3686:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3686:34:8"
															},
															"nativeSrc": "3686:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3686:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3381:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3491:9:8",
														"nodeType": "YulTypedName",
														"src": "3491:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3502:6:8",
														"nodeType": "YulTypedName",
														"src": "3502:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3510:6:8",
														"nodeType": "YulTypedName",
														"src": "3510:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3518:6:8",
														"nodeType": "YulTypedName",
														"src": "3518:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3529:4:8",
														"nodeType": "YulTypedName",
														"src": "3529:4:8",
														"type": ""
													}
												],
												"src": "3381:345:8"
											},
											{
												"body": {
													"nativeSrc": "3832:76:8",
													"nodeType": "YulBlock",
													"src": "3832:76:8",
													"statements": [
														{
															"nativeSrc": "3842:26:8",
															"nodeType": "YulAssignment",
															"src": "3842:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3854:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3854:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3865:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3865:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3850:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3850:3:8"
																},
																"nativeSrc": "3850:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3850:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3842:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3842:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3884:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3884:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3895:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3895:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3877:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3877:6:8"
																},
																"nativeSrc": "3877:25:8",
																"nodeType": "YulFunctionCall",
																"src": "3877:25:8"
															},
															"nativeSrc": "3877:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "3877:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3731:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3801:9:8",
														"nodeType": "YulTypedName",
														"src": "3801:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3812:6:8",
														"nodeType": "YulTypedName",
														"src": "3812:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3823:4:8",
														"nodeType": "YulTypedName",
														"src": "3823:4:8",
														"type": ""
													}
												],
												"src": "3731:177:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_address_t_bytes32__to_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(sub(shl(96, 1), 1))))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040518060400160405280601781526020017f4c6971756964207374616b656420457468657220322e30000000000000000000815250604051806040016040528060058152602001640e6e88aa8960db1b8152508160039081610073919061034d565b506004610080828261034d565b50505061009c33683635c9adc5dea000006100e060201b60201c565b6100af33683635c9adc5dea0000061011d565b683635c9adc5dea000007fe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e5561042c565b6001600160a01b03821661010e5760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b6101195f8383610190565b5050565b6040516001600160601b0319606084901b1660208201527f101b73cb67a778893ea0c666939f8923c501a5d4cd59d1ecf919b502247b5b0c60348201525f90605401604051602081830303815290604052805190602001209050610187818361018c60201b60201c565b505050565b9055565b6001600160a01b0383166101ba578060025f8282546101af9190610407565b9091555061022a9050565b6001600160a01b0383165f908152602081905260409020548181101561020c5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610105565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661024657600280548290039055610264565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516102a991815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806102de57607f821691505b6020821081036102fc57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561018757805f5260205f20601f840160051c810160208510156103275750805b601f840160051c820191505b81811015610346575f8155600101610333565b5050505050565b81516001600160401b03811115610366576103666102b6565b61037a8161037484546102ca565b84610302565b6020601f8211600181146103ac575f83156103955750848201515b5f19600385901b1c1916600184901b178455610346565b5f84815260208120601f198516915b828110156103db57878501518255602094850194600190920191016103bb565b50848210156103f857868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561042657634e487b7160e01b5f52601160045260245ffd5b92915050565b610ae3806104395f395ff3fe6080604052600436106100e4575f3560e01c80635bcb2fc611610087578063a9059cbb11610057578063a9059cbb14610233578063d5002f2e14610252578063dd62ed3e14610266578063f5eb42dc146102aa575f5ffd5b80635bcb2fc6146101d957806370a08231146101e15780637a28fb881461020057806395d89b411461021f575f5ffd5b806319208451116100c2578063192084511461015f57806323b872dd1461017e578063313ce5671461019d57806359974e38146101b8575f5ffd5b806306fdde03146100e8578063095ea7b31461011257806318160ddd14610141575b5f5ffd5b3480156100f3575f5ffd5b506100fc6102c9565b6040516101099190610905565b60405180910390f35b34801561011d575f5ffd5b5061013161012c366004610955565b610359565b6040519015158152602001610109565b34801561014c575f5ffd5b506002545b604051908152602001610109565b34801561016a575f5ffd5b5061015161017936600461097d565b610372565b348015610189575f5ffd5b50610131610198366004610994565b6103a5565b3480156101a8575f5ffd5b5060405160128152602001610109565b3480156101c3575f5ffd5b506101d76101d236600461097d565b6103c8565b005b6101d76103d5565b3480156101ec575f5ffd5b506101516101fb3660046109ce565b61048c565b34801561020b575f5ffd5b5061015161021a36600461097d565b610499565b34801561022a575f5ffd5b506100fc6104bf565b34801561023e575f5ffd5b5061013161024d366004610955565b6104ce565b34801561025d575f5ffd5b506101516104db565b348015610271575f5ffd5b506101516102803660046109e7565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b3480156102b5575f5ffd5b506101516102c43660046109ce565b610509565b6060600380546102d890610a18565b80601f016020809104026020016040519081016040528092919081815260200182805461030490610a18565b801561034f5780601f106103265761010080835404028352916020019161034f565b820191905f5260205f20905b81548152906001019060200180831161033257829003601f168201915b5050505050905090565b5f33610366818585610513565b60019150505b92915050565b5f61037c60025490565b5f03610386575090565b6002546103916104db565b61039b9084610a64565b61036c9190610a7b565b5f336103b2858285610525565b6103bd8585856105a0565b506001949350505050565b6103d230826105fd565b50565b5f341161041f5760405162461bcd60e51b8152602060048201526013602482015272086c2dcdcdee840e6eac4dad2e84060408aa89606b1b60448201526064015b60405180910390fd5b5f61042934610372565b9050610448338261043933610509565b6104439190610a9a565b610635565b610482816104546104db565b61045e9190610a9a565b7fe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e55565b6103d233346105fd565b5f61036c61021a83610509565b5f6104a26104db565b5f036104af57505f919050565b6104b76104db565b600254610391565b6060600480546102d890610a18565b5f336103668185856105a0565b5f6105047fe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e5490565b905090565b5f61036c8261069d565b610520838383600161070d565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811461059a578181101561058c57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610416565b61059a84848484035f61070d565b50505050565b6001600160a01b0383166105c957604051634b637e8f60e11b81525f6004820152602401610416565b6001600160a01b0382166105f25760405163ec442f0560e01b81525f6004820152602401610416565b6105208383836107df565b6001600160a01b0382166106265760405163ec442f0560e01b81525f6004820152602401610416565b6106315f83836107df565b5050565b6040516bffffffffffffffffffffffff19606084901b1660208201527f101b73cb67a778893ea0c666939f8923c501a5d4cd59d1ecf919b502247b5b0c60348201525f9060540160405160208183030381529060405280519060200120905061052081839055565b6040516bffffffffffffffffffffffff19606083901b1660208201527f101b73cb67a778893ea0c666939f8923c501a5d4cd59d1ecf919b502247b5b0c60348201525f908190605401604051602081830303815290604052805190602001209050610706815490565b9392505050565b6001600160a01b0384166107365760405163e602df0560e01b81525f6004820152602401610416565b6001600160a01b03831661075f57604051634a1406b160e11b81525f6004820152602401610416565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561059a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107d191815260200190565b60405180910390a350505050565b6001600160a01b038316610809578060025f8282546107fe9190610a9a565b909155506108799050565b6001600160a01b0383165f908152602081905260409020548181101561085b5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610416565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610895576002805482900390556108b3565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108f891815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610950575f5ffd5b919050565b5f5f60408385031215610966575f5ffd5b61096f8361093a565b946020939093013593505050565b5f6020828403121561098d575f5ffd5b5035919050565b5f5f5f606084860312156109a6575f5ffd5b6109af8461093a565b92506109bd6020850161093a565b929592945050506040919091013590565b5f602082840312156109de575f5ffd5b6107068261093a565b5f5f604083850312156109f8575f5ffd5b610a018361093a565b9150610a0f6020840161093a565b90509250929050565b600181811c90821680610a2c57607f821691505b602082108103610a4a57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808202811582820484141761036c5761036c610a50565b5f82610a9557634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561036c5761036c610a5056fea2646970667358221220ab6584cabb7d0a805f94160f17e56b31c32700f3d282db8a8326a3ff51cb0efe64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C6971756964207374616B656420457468657220322E30000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0xE6E88AA89 PUSH1 0xDB SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x73 SWAP2 SWAP1 PUSH2 0x34D JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x80 DUP3 DUP3 PUSH2 0x34D JUMP JUMPDEST POP POP POP PUSH2 0x9C CALLER PUSH9 0x3635C9ADC5DEA00000 PUSH2 0xE0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xAF CALLER PUSH9 0x3635C9ADC5DEA00000 PUSH2 0x11D JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 PUSH32 0xE3B4B636E601189B5F4C6742EDF2538AC12BB61ED03E6DA26949D69838FA447E SSTORE PUSH2 0x42C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x119 PUSH0 DUP4 DUP4 PUSH2 0x190 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x101B73CB67A778893EA0C666939F8923C501A5D4CD59D1ECF919B502247B5B0C PUSH1 0x34 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x187 DUP2 DUP4 PUSH2 0x18C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1BA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x407 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x22A SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x105 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x246 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x264 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2DE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x187 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x327 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x346 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x333 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x366 JUMPI PUSH2 0x366 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0x37A DUP2 PUSH2 0x374 DUP5 SLOAD PUSH2 0x2CA JUMP JUMPDEST DUP5 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3AC JUMPI PUSH0 DUP4 ISZERO PUSH2 0x395 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x346 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3DB JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3BB JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x3F8 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x426 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAE3 DUP1 PUSH2 0x439 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5BCB2FC6 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xD5002F2E EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xF5EB42DC EQ PUSH2 0x2AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x5BCB2FC6 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x7A28FB88 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x19208451 GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x19208451 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x59974E38 EQ PUSH2 0x1B8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x141 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x12C CALLDATASIZE PUSH1 0x4 PUSH2 0x955 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x994 JUMP JUMPDEST PUSH2 0x3A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x3C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH2 0x3D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x4BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x955 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x4DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xA18 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x304 SWAP1 PUSH2 0xA18 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x34F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x326 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x34F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x332 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x366 DUP2 DUP6 DUP6 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x37C PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH0 SUB PUSH2 0x386 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x391 PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x39B SWAP1 DUP5 PUSH2 0xA64 JUMP JUMPDEST PUSH2 0x36C SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3B2 DUP6 DUP3 DUP6 PUSH2 0x525 JUMP JUMPDEST PUSH2 0x3BD DUP6 DUP6 DUP6 PUSH2 0x5A0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3D2 ADDRESS DUP3 PUSH2 0x5FD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x86C2DCDCDEE840E6EAC4DAD2E84060408AA89 PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x429 CALLVALUE PUSH2 0x372 JUMP JUMPDEST SWAP1 POP PUSH2 0x448 CALLER DUP3 PUSH2 0x439 CALLER PUSH2 0x509 JUMP JUMPDEST PUSH2 0x443 SWAP2 SWAP1 PUSH2 0xA9A JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x454 PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x45E SWAP2 SWAP1 PUSH2 0xA9A JUMP JUMPDEST PUSH32 0xE3B4B636E601189B5F4C6742EDF2538AC12BB61ED03E6DA26949D69838FA447E SSTORE JUMP JUMPDEST PUSH2 0x3D2 CALLER CALLVALUE PUSH2 0x5FD JUMP JUMPDEST PUSH0 PUSH2 0x36C PUSH2 0x21A DUP4 PUSH2 0x509 JUMP JUMPDEST PUSH0 PUSH2 0x4A2 PUSH2 0x4DB JUMP JUMPDEST PUSH0 SUB PUSH2 0x4AF JUMPI POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B7 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x391 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xA18 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x366 DUP2 DUP6 DUP6 PUSH2 0x5A0 JUMP JUMPDEST PUSH0 PUSH2 0x504 PUSH32 0xE3B4B636E601189B5F4C6742EDF2538AC12BB61ED03E6DA26949D69838FA447E SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x36C DUP3 PUSH2 0x69D JUMP JUMPDEST PUSH2 0x520 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x70D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x59A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x58C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x416 JUMP JUMPDEST PUSH2 0x59A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x70D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH2 0x520 DUP4 DUP4 DUP4 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH2 0x631 PUSH0 DUP4 DUP4 PUSH2 0x7DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x101B73CB67A778893EA0C666939F8923C501A5D4CD59D1ECF919B502247B5B0C PUSH1 0x34 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x520 DUP2 DUP4 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x101B73CB67A778893EA0C666939F8923C501A5D4CD59D1ECF919B502247B5B0C PUSH1 0x34 DUP3 ADD MSTORE PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x706 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x59A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7D1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x809 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0xA9A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x879 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x895 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x8F8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x950 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x966 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x96F DUP4 PUSH2 0x93A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x98D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9AF DUP5 PUSH2 0x93A JUMP JUMPDEST SWAP3 POP PUSH2 0x9BD PUSH1 0x20 DUP6 ADD PUSH2 0x93A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DE JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x706 DUP3 PUSH2 0x93A JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA01 DUP4 PUSH2 0x93A JUMP JUMPDEST SWAP2 POP PUSH2 0xA0F PUSH1 0x20 DUP5 ADD PUSH2 0x93A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA2C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA4A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x36C JUMPI PUSH2 0x36C PUSH2 0xA50 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA95 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x36C JUMPI PUSH2 0x36C PUSH2 0xA50 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH6 0x84CABB7D0A80 PUSH0 SWAP5 AND 0xF OR 0xE5 PUSH12 0x31C32700F3D282DB8A8326A3 SELFDESTRUCT MLOAD 0xCB 0xE INVALID PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "252:3177:7:-:0;;;1409:250;;;;;;;;;;1601:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1601:113:1;;;1675:5;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:1;:17;1700:7;1690;:17;:::i;:::-;;1601:113;;1518:29:7::1;1524:10;1536;1518:5;;;:29;;:::i;:::-;1557:34;1568:10;1580;1557;:34::i;:::-;1641:10;380:66;1263:22:6::0;252:3177:7;;7458:208:1;-1:-1:-1;;;;;7528:21:1;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:1;;7601:1;7572:32;;;2801:51:8;2774:18;;7572:32:1;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;3215:212:7:-;3314:43;;-1:-1:-1;;;;;;3065:2:8;3036:15;;;3032:45;3314:43:7;;;3020:58:8;1273:30:7;3094:12:8;;;3087:28;3289:12:7;;3131::8;;3314:43:7;;;;;;;;;;;;3304:54;;;;;;3289:69;;3368:52;3406:4;3412:7;3368:37;;;:52;;:::i;:::-;3279:148;3215:212;;:::o;1162:139:6:-;1263:22;;1162:139::o;6008:1107:1:-;-1:-1:-1;;;;;6097:18:1;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:1;;-1:-1:-1;6093:540:1;;-1:-1:-1;;;;;6307:15:1;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:1;;-1:-1:-1;;;;;3601:32:8;;6386:50:1;;;3583:51:8;3650:18;;;3643:34;;;3693:18;;;3686:34;;;3556:18;;6386:50:1;3381:345:8;6336:115:1;-1:-1:-1;;;;;6571:15:1;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:1;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:1;7092:4;-1:-1:-1;;;;;7083:25:1;;7102:5;7083:25;;;;3877::8;;3865:2;3850:18;;3731:177;7083:25:1;;;;;;;;6008:1107;;;:::o;14:127:8:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:8;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:8;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:8;;;2500:26;2451:89;-1:-1:-1;;1308:1:8;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:8;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:8;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:8;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:8:o;3154:222::-;3219:9;;;3240:10;;;3237:133;;;3292:10;3287:3;3283:20;3280:1;3273:31;3327:4;3324:1;3317:15;3355:4;3352:1;3345:15;3237:133;3154:222;;;;:::o;3731:177::-;252:3177:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 1299,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 1805,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getShares_1139": {
									"entryPoint": 1693,
									"id": 1139,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_491": {
									"entryPoint": 1533,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setShares_1164": {
									"entryPoint": 1589,
									"id": 1164,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_650": {
									"entryPoint": 1317,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 1440,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 2015,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 857,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_984": {
									"entryPoint": 1164,
									"id": 984,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@distributeRewards_1116": {
									"entryPoint": 968,
									"id": 1116,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getPooledEthByShares_1102": {
									"entryPoint": 1177,
									"id": 1102,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getSharesByPooledEth_1077": {
									"entryPoint": 882,
									"id": 1077,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStorageUint256_843": {
									"entryPoint": null,
									"id": 843,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalShares_1040": {
									"entryPoint": 1243,
									"id": 1040,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 713,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setStorageUint256_879": {
									"entryPoint": null,
									"id": 879,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sharesOf_1052": {
									"entryPoint": 1289,
									"id": 1052,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@submit_1030": {
									"entryPoint": 981,
									"id": 1030,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 1215,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 933,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 1230,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_bytes32__to_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7c4201f5724086737f17babf309efa26d71d5d7e134e45a5d0d45b5c5b99859f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2640,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4793:8",
										"nodeType": "YulBlock",
										"src": "0:4793:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:8",
													"nodeType": "YulBlock",
													"src": "135:297:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:8",
																		"nodeType": "YulLiteral",
																		"src": "163:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:8"
																},
																"nativeSrc": "145:21:8",
																"nodeType": "YulFunctionCall",
																"src": "145:21:8"
															},
															"nativeSrc": "145:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:8"
														},
														{
															"nativeSrc": "175:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:8"
																},
																"nativeSrc": "189:13:8",
																"nodeType": "YulFunctionCall",
																"src": "189:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:8",
																	"nodeType": "YulTypedName",
																	"src": "179:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:8",
																				"nodeType": "YulLiteral",
																				"src": "233:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:8"
																		},
																		"nativeSrc": "218:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:8"
																},
																"nativeSrc": "211:34:8",
																"nodeType": "YulFunctionCall",
																"src": "211:34:8"
															},
															"nativeSrc": "211:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:8",
																				"nodeType": "YulLiteral",
																				"src": "275:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:8"
																		},
																		"nativeSrc": "260:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:8",
																				"nodeType": "YulLiteral",
																				"src": "292:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:8"
																		},
																		"nativeSrc": "280:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:8"
																},
																"nativeSrc": "254:50:8",
																"nodeType": "YulFunctionCall",
																"src": "254:50:8"
															},
															"nativeSrc": "254:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:8"
																				},
																				"nativeSrc": "324:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:8",
																				"nodeType": "YulLiteral",
																				"src": "348:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:8"
																		},
																		"nativeSrc": "320:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:8",
																		"nodeType": "YulLiteral",
																		"src": "353:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:8"
																},
																"nativeSrc": "313:42:8",
																"nodeType": "YulFunctionCall",
																"src": "313:42:8"
															},
															"nativeSrc": "313:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:8"
														},
														{
															"nativeSrc": "364:62:8",
															"nodeType": "YulAssignment",
															"src": "364:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:8",
																								"nodeType": "YulLiteral",
																								"src": "407:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:8"
																						},
																						"nativeSrc": "395:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:8",
																								"nodeType": "YulLiteral",
																								"src": "416:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:8"
																						},
																						"nativeSrc": "412:7:8",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:8"
																				},
																				"nativeSrc": "391:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:8"
																		},
																		"nativeSrc": "376:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:8",
																		"nodeType": "YulLiteral",
																		"src": "423:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:8"
																},
																"nativeSrc": "372:54:8",
																"nodeType": "YulFunctionCall",
																"src": "372:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:8",
														"nodeType": "YulTypedName",
														"src": "104:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:8",
														"nodeType": "YulTypedName",
														"src": "115:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:8",
														"nodeType": "YulTypedName",
														"src": "126:4:8",
														"type": ""
													}
												],
												"src": "14:418:8"
											},
											{
												"body": {
													"nativeSrc": "486:124:8",
													"nodeType": "YulBlock",
													"src": "486:124:8",
													"statements": [
														{
															"nativeSrc": "496:29:8",
															"nodeType": "YulAssignment",
															"src": "496:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:8"
																},
																"nativeSrc": "505:20:8",
																"nodeType": "YulFunctionCall",
																"src": "505:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:8",
																"nodeType": "YulBlock",
																"src": "588:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:8",
																					"nodeType": "YulLiteral",
																					"src": "597:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:8",
																					"nodeType": "YulLiteral",
																					"src": "600:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:8"
																			},
																			"nativeSrc": "590:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:8"
																		},
																		"nativeSrc": "590:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:8",
																										"nodeType": "YulLiteral",
																										"src": "573:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:8",
																										"nodeType": "YulLiteral",
																										"src": "578:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:8"
																								},
																								"nativeSrc": "569:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:8",
																								"nodeType": "YulLiteral",
																								"src": "582:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:8"
																						},
																						"nativeSrc": "565:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:8"
																				},
																				"nativeSrc": "554:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:8"
																		},
																		"nativeSrc": "544:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:8"
																},
																"nativeSrc": "537:50:8",
																"nodeType": "YulFunctionCall",
																"src": "537:50:8"
															},
															"nativeSrc": "534:70:8",
															"nodeType": "YulIf",
															"src": "534:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:8",
														"nodeType": "YulTypedName",
														"src": "465:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:8",
														"nodeType": "YulTypedName",
														"src": "476:5:8",
														"type": ""
													}
												],
												"src": "437:173:8"
											},
											{
												"body": {
													"nativeSrc": "702:213:8",
													"nodeType": "YulBlock",
													"src": "702:213:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:8",
																"nodeType": "YulBlock",
																"src": "748:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:8",
																					"nodeType": "YulLiteral",
																					"src": "757:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:8",
																					"nodeType": "YulLiteral",
																					"src": "760:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:8"
																			},
																			"nativeSrc": "750:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:8"
																		},
																		"nativeSrc": "750:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:8"
																		},
																		"nativeSrc": "719:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:8",
																		"nodeType": "YulLiteral",
																		"src": "744:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:8"
																},
																"nativeSrc": "715:32:8",
																"nodeType": "YulFunctionCall",
																"src": "715:32:8"
															},
															"nativeSrc": "712:52:8",
															"nodeType": "YulIf",
															"src": "712:52:8"
														},
														{
															"nativeSrc": "773:39:8",
															"nodeType": "YulAssignment",
															"src": "773:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:8"
																},
																"nativeSrc": "783:29:8",
																"nodeType": "YulFunctionCall",
																"src": "783:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:8"
																}
															]
														},
														{
															"nativeSrc": "821:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:8",
																"nodeType": "YulLiteral",
																"src": "834:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:8",
																	"nodeType": "YulTypedName",
																	"src": "825:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:8",
															"nodeType": "YulAssignment",
															"src": "844:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:8",
																				"nodeType": "YulLiteral",
																				"src": "881:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:8"
																		},
																		"nativeSrc": "866:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:8"
																},
																"nativeSrc": "853:32:8",
																"nodeType": "YulFunctionCall",
																"src": "853:32:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:8"
																}
															]
														},
														{
															"nativeSrc": "894:15:8",
															"nodeType": "YulAssignment",
															"src": "894:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:8",
																"nodeType": "YulIdentifier",
																"src": "904:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:8",
														"nodeType": "YulTypedName",
														"src": "660:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:8",
														"nodeType": "YulTypedName",
														"src": "671:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:8",
														"nodeType": "YulTypedName",
														"src": "683:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:8",
														"nodeType": "YulTypedName",
														"src": "691:6:8",
														"type": ""
													}
												],
												"src": "615:300:8"
											},
											{
												"body": {
													"nativeSrc": "1015:92:8",
													"nodeType": "YulBlock",
													"src": "1015:92:8",
													"statements": [
														{
															"nativeSrc": "1025:26:8",
															"nodeType": "YulAssignment",
															"src": "1025:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:8"
																},
																"nativeSrc": "1033:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:8"
																				},
																				"nativeSrc": "1085:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:8"
																		},
																		"nativeSrc": "1078:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:8"
																},
																"nativeSrc": "1060:41:8",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:8"
															},
															"nativeSrc": "1060:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:8",
														"nodeType": "YulTypedName",
														"src": "984:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:8",
														"nodeType": "YulTypedName",
														"src": "995:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:8",
														"nodeType": "YulTypedName",
														"src": "1006:4:8",
														"type": ""
													}
												],
												"src": "920:187:8"
											},
											{
												"body": {
													"nativeSrc": "1213:76:8",
													"nodeType": "YulBlock",
													"src": "1213:76:8",
													"statements": [
														{
															"nativeSrc": "1223:26:8",
															"nodeType": "YulAssignment",
															"src": "1223:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:8"
																},
																"nativeSrc": "1231:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:8"
																},
																"nativeSrc": "1258:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:8"
															},
															"nativeSrc": "1258:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:8",
														"nodeType": "YulTypedName",
														"src": "1182:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:8",
														"nodeType": "YulTypedName",
														"src": "1193:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:8",
														"nodeType": "YulTypedName",
														"src": "1204:4:8",
														"type": ""
													}
												],
												"src": "1112:177:8"
											},
											{
												"body": {
													"nativeSrc": "1364:156:8",
													"nodeType": "YulBlock",
													"src": "1364:156:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1410:16:8",
																"nodeType": "YulBlock",
																"src": "1410:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1419:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1419:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1422:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1422:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1412:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1412:6:8"
																			},
																			"nativeSrc": "1412:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1412:12:8"
																		},
																		"nativeSrc": "1412:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1412:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1385:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1385:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1394:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1394:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1381:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1381:3:8"
																		},
																		"nativeSrc": "1381:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1381:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1406:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1406:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1377:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1377:3:8"
																},
																"nativeSrc": "1377:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1377:32:8"
															},
															"nativeSrc": "1374:52:8",
															"nodeType": "YulIf",
															"src": "1374:52:8"
														},
														{
															"nativeSrc": "1435:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1435:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1448:1:8",
																"nodeType": "YulLiteral",
																"src": "1448:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1439:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1439:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1458:32:8",
															"nodeType": "YulAssignment",
															"src": "1458:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1480:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1480:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1467:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1467:12:8"
																},
																"nativeSrc": "1467:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1467:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1458:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1458:5:8"
																}
															]
														},
														{
															"nativeSrc": "1499:15:8",
															"nodeType": "YulAssignment",
															"src": "1499:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1509:5:8",
																"nodeType": "YulIdentifier",
																"src": "1509:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1499:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1499:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1294:226:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1330:9:8",
														"nodeType": "YulTypedName",
														"src": "1330:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1341:7:8",
														"nodeType": "YulTypedName",
														"src": "1341:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1353:6:8",
														"nodeType": "YulTypedName",
														"src": "1353:6:8",
														"type": ""
													}
												],
												"src": "1294:226:8"
											},
											{
												"body": {
													"nativeSrc": "1629:270:8",
													"nodeType": "YulBlock",
													"src": "1629:270:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1675:16:8",
																"nodeType": "YulBlock",
																"src": "1675:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1684:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1684:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1687:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1687:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1677:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1677:6:8"
																			},
																			"nativeSrc": "1677:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1677:12:8"
																		},
																		"nativeSrc": "1677:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1677:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1650:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1650:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1659:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1659:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1646:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1646:3:8"
																		},
																		"nativeSrc": "1646:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1646:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1671:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1671:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1642:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1642:3:8"
																},
																"nativeSrc": "1642:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1642:32:8"
															},
															"nativeSrc": "1639:52:8",
															"nodeType": "YulIf",
															"src": "1639:52:8"
														},
														{
															"nativeSrc": "1700:39:8",
															"nodeType": "YulAssignment",
															"src": "1700:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1729:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1729:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1710:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1710:18:8"
																},
																"nativeSrc": "1710:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1710:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1700:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1700:6:8"
																}
															]
														},
														{
															"nativeSrc": "1748:48:8",
															"nodeType": "YulAssignment",
															"src": "1748:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1781:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1781:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1792:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1792:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1777:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1777:3:8"
																		},
																		"nativeSrc": "1777:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1777:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1758:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1758:18:8"
																},
																"nativeSrc": "1758:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1758:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1748:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1748:6:8"
																}
															]
														},
														{
															"nativeSrc": "1805:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1805:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1818:1:8",
																"nodeType": "YulLiteral",
																"src": "1818:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1809:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1809:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1828:41:8",
															"nodeType": "YulAssignment",
															"src": "1828:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1854:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1854:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1865:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1865:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1850:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1850:3:8"
																		},
																		"nativeSrc": "1850:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1850:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1837:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1837:12:8"
																},
																"nativeSrc": "1837:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1837:32:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1828:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1828:5:8"
																}
															]
														},
														{
															"nativeSrc": "1878:15:8",
															"nodeType": "YulAssignment",
															"src": "1878:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1888:5:8",
																"nodeType": "YulIdentifier",
																"src": "1888:5:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1878:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1525:374:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1579:9:8",
														"nodeType": "YulTypedName",
														"src": "1579:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1590:7:8",
														"nodeType": "YulTypedName",
														"src": "1590:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1602:6:8",
														"nodeType": "YulTypedName",
														"src": "1602:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1610:6:8",
														"nodeType": "YulTypedName",
														"src": "1610:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1618:6:8",
														"nodeType": "YulTypedName",
														"src": "1618:6:8",
														"type": ""
													}
												],
												"src": "1525:374:8"
											},
											{
												"body": {
													"nativeSrc": "2001:87:8",
													"nodeType": "YulBlock",
													"src": "2001:87:8",
													"statements": [
														{
															"nativeSrc": "2011:26:8",
															"nodeType": "YulAssignment",
															"src": "2011:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2023:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2023:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2034:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2034:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2019:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:8"
																},
																"nativeSrc": "2019:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2019:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2011:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2011:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2053:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2053:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2068:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2068:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2076:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2076:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2064:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2064:3:8"
																		},
																		"nativeSrc": "2064:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2064:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2046:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2046:6:8"
																},
																"nativeSrc": "2046:36:8",
																"nodeType": "YulFunctionCall",
																"src": "2046:36:8"
															},
															"nativeSrc": "2046:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "2046:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1904:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1970:9:8",
														"nodeType": "YulTypedName",
														"src": "1970:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1981:6:8",
														"nodeType": "YulTypedName",
														"src": "1981:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1992:4:8",
														"nodeType": "YulTypedName",
														"src": "1992:4:8",
														"type": ""
													}
												],
												"src": "1904:184:8"
											},
											{
												"body": {
													"nativeSrc": "2163:116:8",
													"nodeType": "YulBlock",
													"src": "2163:116:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2209:16:8",
																"nodeType": "YulBlock",
																"src": "2209:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2218:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2218:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2221:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2221:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2211:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2211:6:8"
																			},
																			"nativeSrc": "2211:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2211:12:8"
																		},
																		"nativeSrc": "2211:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2211:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2184:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2184:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2193:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2193:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2180:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2180:3:8"
																		},
																		"nativeSrc": "2180:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2180:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2205:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2205:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2176:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2176:3:8"
																},
																"nativeSrc": "2176:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2176:32:8"
															},
															"nativeSrc": "2173:52:8",
															"nodeType": "YulIf",
															"src": "2173:52:8"
														},
														{
															"nativeSrc": "2234:39:8",
															"nodeType": "YulAssignment",
															"src": "2234:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2263:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2263:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2244:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2244:18:8"
																},
																"nativeSrc": "2244:29:8",
																"nodeType": "YulFunctionCall",
																"src": "2244:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2234:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2234:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2093:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2129:9:8",
														"nodeType": "YulTypedName",
														"src": "2129:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2140:7:8",
														"nodeType": "YulTypedName",
														"src": "2140:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2152:6:8",
														"nodeType": "YulTypedName",
														"src": "2152:6:8",
														"type": ""
													}
												],
												"src": "2093:186:8"
											},
											{
												"body": {
													"nativeSrc": "2371:173:8",
													"nodeType": "YulBlock",
													"src": "2371:173:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2417:16:8",
																"nodeType": "YulBlock",
																"src": "2417:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2426:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2426:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2429:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2429:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2419:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2419:6:8"
																			},
																			"nativeSrc": "2419:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2419:12:8"
																		},
																		"nativeSrc": "2419:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2419:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2392:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2392:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2401:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2401:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2388:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:8"
																		},
																		"nativeSrc": "2388:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2388:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2413:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2384:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2384:3:8"
																},
																"nativeSrc": "2384:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2384:32:8"
															},
															"nativeSrc": "2381:52:8",
															"nodeType": "YulIf",
															"src": "2381:52:8"
														},
														{
															"nativeSrc": "2442:39:8",
															"nodeType": "YulAssignment",
															"src": "2442:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2471:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2471:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2452:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2452:18:8"
																},
																"nativeSrc": "2452:29:8",
																"nodeType": "YulFunctionCall",
																"src": "2452:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2442:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:8"
																}
															]
														},
														{
															"nativeSrc": "2490:48:8",
															"nodeType": "YulAssignment",
															"src": "2490:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2523:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2523:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2534:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2534:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2519:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2519:3:8"
																		},
																		"nativeSrc": "2519:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2519:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2500:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2500:18:8"
																},
																"nativeSrc": "2500:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2500:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2490:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2284:260:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2329:9:8",
														"nodeType": "YulTypedName",
														"src": "2329:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2340:7:8",
														"nodeType": "YulTypedName",
														"src": "2340:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2352:6:8",
														"nodeType": "YulTypedName",
														"src": "2352:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2360:6:8",
														"nodeType": "YulTypedName",
														"src": "2360:6:8",
														"type": ""
													}
												],
												"src": "2284:260:8"
											},
											{
												"body": {
													"nativeSrc": "2604:325:8",
													"nodeType": "YulBlock",
													"src": "2604:325:8",
													"statements": [
														{
															"nativeSrc": "2614:22:8",
															"nodeType": "YulAssignment",
															"src": "2614:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2628:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2628:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2631:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2631:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2624:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2624:3:8"
																},
																"nativeSrc": "2624:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2624:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2614:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2614:6:8"
																}
															]
														},
														{
															"nativeSrc": "2645:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2645:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2675:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2675:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2681:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2681:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2671:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2671:3:8"
																},
																"nativeSrc": "2671:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2671:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2649:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2649:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2722:31:8",
																"nodeType": "YulBlock",
																"src": "2722:31:8",
																"statements": [
																	{
																		"nativeSrc": "2724:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2724:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2738:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2738:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2746:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2746:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2734:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2734:3:8"
																			},
																			"nativeSrc": "2734:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2734:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2724:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2724:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2702:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2702:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2695:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2695:6:8"
																},
																"nativeSrc": "2695:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2695:26:8"
															},
															"nativeSrc": "2692:61:8",
															"nodeType": "YulIf",
															"src": "2692:61:8"
														},
														{
															"body": {
																"nativeSrc": "2812:111:8",
																"nodeType": "YulBlock",
																"src": "2812:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2833:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2833:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2840:3:8",
																							"nodeType": "YulLiteral",
																							"src": "2840:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2845:10:8",
																							"nodeType": "YulLiteral",
																							"src": "2845:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2836:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2836:3:8"
																					},
																					"nativeSrc": "2836:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2836:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2826:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2826:6:8"
																			},
																			"nativeSrc": "2826:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2826:31:8"
																		},
																		"nativeSrc": "2826:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2826:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2877:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2877:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2880:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2880:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2870:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2870:6:8"
																			},
																			"nativeSrc": "2870:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2870:15:8"
																		},
																		"nativeSrc": "2870:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2870:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2905:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2905:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2908:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2908:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2898:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2898:6:8"
																			},
																			"nativeSrc": "2898:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2898:15:8"
																		},
																		"nativeSrc": "2898:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2898:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2768:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2768:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2791:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2791:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2799:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2799:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2788:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2788:2:8"
																		},
																		"nativeSrc": "2788:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2788:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2765:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2765:2:8"
																},
																"nativeSrc": "2765:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2765:38:8"
															},
															"nativeSrc": "2762:161:8",
															"nodeType": "YulIf",
															"src": "2762:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2549:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2584:4:8",
														"nodeType": "YulTypedName",
														"src": "2584:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2593:6:8",
														"nodeType": "YulTypedName",
														"src": "2593:6:8",
														"type": ""
													}
												],
												"src": "2549:380:8"
											},
											{
												"body": {
													"nativeSrc": "2966:95:8",
													"nodeType": "YulBlock",
													"src": "2966:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2983:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2983:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2990:3:8",
																				"nodeType": "YulLiteral",
																				"src": "2990:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2995:10:8",
																				"nodeType": "YulLiteral",
																				"src": "2995:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2986:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2986:3:8"
																		},
																		"nativeSrc": "2986:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2986:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2976:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2976:6:8"
																},
																"nativeSrc": "2976:31:8",
																"nodeType": "YulFunctionCall",
																"src": "2976:31:8"
															},
															"nativeSrc": "2976:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "2976:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3023:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3023:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3026:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3026:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3016:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3016:6:8"
																},
																"nativeSrc": "3016:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3016:15:8"
															},
															"nativeSrc": "3016:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3016:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3047:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3047:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3050:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3050:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3040:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3040:6:8"
																},
																"nativeSrc": "3040:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3040:15:8"
															},
															"nativeSrc": "3040:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3040:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2934:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2934:127:8"
											},
											{
												"body": {
													"nativeSrc": "3118:116:8",
													"nodeType": "YulBlock",
													"src": "3118:116:8",
													"statements": [
														{
															"nativeSrc": "3128:20:8",
															"nodeType": "YulAssignment",
															"src": "3128:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3143:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3143:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3146:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3146:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3139:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3139:3:8"
																},
																"nativeSrc": "3139:9:8",
																"nodeType": "YulFunctionCall",
																"src": "3139:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3128:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3128:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3206:22:8",
																"nodeType": "YulBlock",
																"src": "3206:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3208:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "3208:16:8"
																			},
																			"nativeSrc": "3208:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3208:18:8"
																		},
																		"nativeSrc": "3208:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3208:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3177:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "3177:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3170:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "3170:6:8"
																				},
																				"nativeSrc": "3170:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3170:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3184:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "3184:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3191:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "3191:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3200:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "3200:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3187:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3187:3:8"
																						},
																						"nativeSrc": "3187:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3187:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3181:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "3181:2:8"
																				},
																				"nativeSrc": "3181:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3181:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3167:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3167:2:8"
																		},
																		"nativeSrc": "3167:37:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3167:37:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3160:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3160:6:8"
																},
																"nativeSrc": "3160:45:8",
																"nodeType": "YulFunctionCall",
																"src": "3160:45:8"
															},
															"nativeSrc": "3157:71:8",
															"nodeType": "YulIf",
															"src": "3157:71:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3066:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3097:1:8",
														"nodeType": "YulTypedName",
														"src": "3097:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3100:1:8",
														"nodeType": "YulTypedName",
														"src": "3100:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3106:7:8",
														"nodeType": "YulTypedName",
														"src": "3106:7:8",
														"type": ""
													}
												],
												"src": "3066:168:8"
											},
											{
												"body": {
													"nativeSrc": "3285:171:8",
													"nodeType": "YulBlock",
													"src": "3285:171:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3316:111:8",
																"nodeType": "YulBlock",
																"src": "3316:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3337:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3337:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3344:3:8",
																							"nodeType": "YulLiteral",
																							"src": "3344:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3349:10:8",
																							"nodeType": "YulLiteral",
																							"src": "3349:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3340:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3340:3:8"
																					},
																					"nativeSrc": "3340:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3340:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3330:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3330:6:8"
																			},
																			"nativeSrc": "3330:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:31:8"
																		},
																		"nativeSrc": "3330:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3381:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3381:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3384:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3384:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3374:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3374:6:8"
																			},
																			"nativeSrc": "3374:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3374:15:8"
																		},
																		"nativeSrc": "3374:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3374:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3409:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3409:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3412:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3412:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3402:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3402:6:8"
																			},
																			"nativeSrc": "3402:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3402:15:8"
																		},
																		"nativeSrc": "3402:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3402:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3305:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3305:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3298:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3298:6:8"
																},
																"nativeSrc": "3298:9:8",
																"nodeType": "YulFunctionCall",
																"src": "3298:9:8"
															},
															"nativeSrc": "3295:132:8",
															"nodeType": "YulIf",
															"src": "3295:132:8"
														},
														{
															"nativeSrc": "3436:14:8",
															"nodeType": "YulAssignment",
															"src": "3436:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3445:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3445:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3448:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3448:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3441:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3441:3:8"
																},
																"nativeSrc": "3441:9:8",
																"nodeType": "YulFunctionCall",
																"src": "3441:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3436:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "3436:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3239:217:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3270:1:8",
														"nodeType": "YulTypedName",
														"src": "3270:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3273:1:8",
														"nodeType": "YulTypedName",
														"src": "3273:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3279:1:8",
														"nodeType": "YulTypedName",
														"src": "3279:1:8",
														"type": ""
													}
												],
												"src": "3239:217:8"
											},
											{
												"body": {
													"nativeSrc": "3635:169:8",
													"nodeType": "YulBlock",
													"src": "3635:169:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3652:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3652:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3663:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3663:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3645:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3645:6:8"
																},
																"nativeSrc": "3645:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3645:21:8"
															},
															"nativeSrc": "3645:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "3645:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3686:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3686:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3697:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3697:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3682:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3682:3:8"
																		},
																		"nativeSrc": "3682:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3682:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3702:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3702:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3675:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:8"
																},
																"nativeSrc": "3675:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3675:30:8"
															},
															"nativeSrc": "3675:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3675:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3725:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3725:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3736:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3736:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3721:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3721:3:8"
																		},
																		"nativeSrc": "3721:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3721:18:8"
																	},
																	{
																		"hexValue": "43616e6e6f74207375626d6974203020455448",
																		"kind": "string",
																		"nativeSrc": "3741:21:8",
																		"nodeType": "YulLiteral",
																		"src": "3741:21:8",
																		"type": "",
																		"value": "Cannot submit 0 ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3714:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3714:6:8"
																},
																"nativeSrc": "3714:49:8",
																"nodeType": "YulFunctionCall",
																"src": "3714:49:8"
															},
															"nativeSrc": "3714:49:8",
															"nodeType": "YulExpressionStatement",
															"src": "3714:49:8"
														},
														{
															"nativeSrc": "3772:26:8",
															"nodeType": "YulAssignment",
															"src": "3772:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3784:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3784:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3795:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3795:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3780:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3780:3:8"
																},
																"nativeSrc": "3780:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3780:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3772:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3772:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7c4201f5724086737f17babf309efa26d71d5d7e134e45a5d0d45b5c5b99859f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3461:343:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3612:9:8",
														"nodeType": "YulTypedName",
														"src": "3612:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3626:4:8",
														"nodeType": "YulTypedName",
														"src": "3626:4:8",
														"type": ""
													}
												],
												"src": "3461:343:8"
											},
											{
												"body": {
													"nativeSrc": "3857:77:8",
													"nodeType": "YulBlock",
													"src": "3857:77:8",
													"statements": [
														{
															"nativeSrc": "3867:16:8",
															"nodeType": "YulAssignment",
															"src": "3867:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3878:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3878:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3881:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3881:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3874:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3874:3:8"
																},
																"nativeSrc": "3874:9:8",
																"nodeType": "YulFunctionCall",
																"src": "3874:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3867:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3867:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3906:22:8",
																"nodeType": "YulBlock",
																"src": "3906:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3908:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "3908:16:8"
																			},
																			"nativeSrc": "3908:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3908:18:8"
																		},
																		"nativeSrc": "3908:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3908:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3898:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3898:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3901:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3901:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3895:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3895:2:8"
																},
																"nativeSrc": "3895:10:8",
																"nodeType": "YulFunctionCall",
																"src": "3895:10:8"
															},
															"nativeSrc": "3892:36:8",
															"nodeType": "YulIf",
															"src": "3892:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3809:125:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3840:1:8",
														"nodeType": "YulTypedName",
														"src": "3840:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3843:1:8",
														"nodeType": "YulTypedName",
														"src": "3843:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3849:3:8",
														"nodeType": "YulTypedName",
														"src": "3849:3:8",
														"type": ""
													}
												],
												"src": "3809:125:8"
											},
											{
												"body": {
													"nativeSrc": "4096:188:8",
													"nodeType": "YulBlock",
													"src": "4096:188:8",
													"statements": [
														{
															"nativeSrc": "4106:26:8",
															"nodeType": "YulAssignment",
															"src": "4106:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4118:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4118:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4129:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4129:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4114:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4114:3:8"
																},
																"nativeSrc": "4114:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4114:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4106:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4106:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4148:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4148:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4163:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4163:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4179:3:8",
																								"nodeType": "YulLiteral",
																								"src": "4179:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4184:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4184:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4175:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4175:3:8"
																						},
																						"nativeSrc": "4175:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4175:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4188:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4188:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4171:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4171:3:8"
																				},
																				"nativeSrc": "4171:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4171:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4159:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4159:3:8"
																		},
																		"nativeSrc": "4159:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4159:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4141:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4141:6:8"
																},
																"nativeSrc": "4141:51:8",
																"nodeType": "YulFunctionCall",
																"src": "4141:51:8"
															},
															"nativeSrc": "4141:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "4141:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4212:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4212:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4223:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4223:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4208:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4208:3:8"
																		},
																		"nativeSrc": "4208:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4208:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4228:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4228:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4201:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4201:6:8"
																},
																"nativeSrc": "4201:34:8",
																"nodeType": "YulFunctionCall",
																"src": "4201:34:8"
															},
															"nativeSrc": "4201:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "4201:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4255:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4255:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4266:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4266:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4251:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4251:3:8"
																		},
																		"nativeSrc": "4251:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4251:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4271:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4271:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4244:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4244:6:8"
																},
																"nativeSrc": "4244:34:8",
																"nodeType": "YulFunctionCall",
																"src": "4244:34:8"
															},
															"nativeSrc": "4244:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "4244:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3939:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4049:9:8",
														"nodeType": "YulTypedName",
														"src": "4049:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4060:6:8",
														"nodeType": "YulTypedName",
														"src": "4060:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4068:6:8",
														"nodeType": "YulTypedName",
														"src": "4068:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4076:6:8",
														"nodeType": "YulTypedName",
														"src": "4076:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4087:4:8",
														"nodeType": "YulTypedName",
														"src": "4087:4:8",
														"type": ""
													}
												],
												"src": "3939:345:8"
											},
											{
												"body": {
													"nativeSrc": "4390:102:8",
													"nodeType": "YulBlock",
													"src": "4390:102:8",
													"statements": [
														{
															"nativeSrc": "4400:26:8",
															"nodeType": "YulAssignment",
															"src": "4400:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4412:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4412:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4423:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4408:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4408:3:8"
																},
																"nativeSrc": "4408:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4408:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4400:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4400:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4442:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4442:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4457:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4457:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4473:3:8",
																								"nodeType": "YulLiteral",
																								"src": "4473:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4478:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4478:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4469:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4469:3:8"
																						},
																						"nativeSrc": "4469:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4469:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4482:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4482:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4465:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4465:3:8"
																				},
																				"nativeSrc": "4465:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4465:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4453:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4453:3:8"
																		},
																		"nativeSrc": "4453:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4453:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4435:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:8"
																},
																"nativeSrc": "4435:51:8",
																"nodeType": "YulFunctionCall",
																"src": "4435:51:8"
															},
															"nativeSrc": "4435:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "4435:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4289:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4359:9:8",
														"nodeType": "YulTypedName",
														"src": "4359:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4370:6:8",
														"nodeType": "YulTypedName",
														"src": "4370:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4381:4:8",
														"nodeType": "YulTypedName",
														"src": "4381:4:8",
														"type": ""
													}
												],
												"src": "4289:203:8"
											},
											{
												"body": {
													"nativeSrc": "4644:147:8",
													"nodeType": "YulBlock",
													"src": "4644:147:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4661:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4661:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4674:2:8",
																						"nodeType": "YulLiteral",
																						"src": "4674:2:8",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nativeSrc": "4678:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4678:6:8"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4670:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4670:3:8"
																				},
																				"nativeSrc": "4670:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4670:15:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4691:26:8",
																						"nodeType": "YulLiteral",
																						"src": "4691:26:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4687:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4687:3:8"
																				},
																				"nativeSrc": "4687:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4687:31:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4666:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4666:3:8"
																		},
																		"nativeSrc": "4666:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4666:53:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4654:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:8"
																},
																"nativeSrc": "4654:66:8",
																"nodeType": "YulFunctionCall",
																"src": "4654:66:8"
															},
															"nativeSrc": "4654:66:8",
															"nodeType": "YulExpressionStatement",
															"src": "4654:66:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "4740:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4740:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4745:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4745:2:8",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4736:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4736:3:8"
																		},
																		"nativeSrc": "4736:12:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4736:12:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4750:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4750:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4729:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4729:6:8"
																},
																"nativeSrc": "4729:28:8",
																"nodeType": "YulFunctionCall",
																"src": "4729:28:8"
															},
															"nativeSrc": "4729:28:8",
															"nodeType": "YulExpressionStatement",
															"src": "4729:28:8"
														},
														{
															"nativeSrc": "4766:19:8",
															"nodeType": "YulAssignment",
															"src": "4766:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4777:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4777:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4782:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4782:2:8",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4773:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4773:3:8"
																},
																"nativeSrc": "4773:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4773:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4766:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4766:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_bytes32__to_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4497:294:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4612:3:8",
														"nodeType": "YulTypedName",
														"src": "4612:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4617:6:8",
														"nodeType": "YulTypedName",
														"src": "4617:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4625:6:8",
														"nodeType": "YulTypedName",
														"src": "4625:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4636:3:8",
														"nodeType": "YulTypedName",
														"src": "4636:3:8",
														"type": ""
													}
												],
												"src": "4497:294:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_7c4201f5724086737f17babf309efa26d71d5d7e134e45a5d0d45b5c5b99859f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Cannot submit 0 ETH\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_address_t_bytes32__to_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100e4575f3560e01c80635bcb2fc611610087578063a9059cbb11610057578063a9059cbb14610233578063d5002f2e14610252578063dd62ed3e14610266578063f5eb42dc146102aa575f5ffd5b80635bcb2fc6146101d957806370a08231146101e15780637a28fb881461020057806395d89b411461021f575f5ffd5b806319208451116100c2578063192084511461015f57806323b872dd1461017e578063313ce5671461019d57806359974e38146101b8575f5ffd5b806306fdde03146100e8578063095ea7b31461011257806318160ddd14610141575b5f5ffd5b3480156100f3575f5ffd5b506100fc6102c9565b6040516101099190610905565b60405180910390f35b34801561011d575f5ffd5b5061013161012c366004610955565b610359565b6040519015158152602001610109565b34801561014c575f5ffd5b506002545b604051908152602001610109565b34801561016a575f5ffd5b5061015161017936600461097d565b610372565b348015610189575f5ffd5b50610131610198366004610994565b6103a5565b3480156101a8575f5ffd5b5060405160128152602001610109565b3480156101c3575f5ffd5b506101d76101d236600461097d565b6103c8565b005b6101d76103d5565b3480156101ec575f5ffd5b506101516101fb3660046109ce565b61048c565b34801561020b575f5ffd5b5061015161021a36600461097d565b610499565b34801561022a575f5ffd5b506100fc6104bf565b34801561023e575f5ffd5b5061013161024d366004610955565b6104ce565b34801561025d575f5ffd5b506101516104db565b348015610271575f5ffd5b506101516102803660046109e7565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b3480156102b5575f5ffd5b506101516102c43660046109ce565b610509565b6060600380546102d890610a18565b80601f016020809104026020016040519081016040528092919081815260200182805461030490610a18565b801561034f5780601f106103265761010080835404028352916020019161034f565b820191905f5260205f20905b81548152906001019060200180831161033257829003601f168201915b5050505050905090565b5f33610366818585610513565b60019150505b92915050565b5f61037c60025490565b5f03610386575090565b6002546103916104db565b61039b9084610a64565b61036c9190610a7b565b5f336103b2858285610525565b6103bd8585856105a0565b506001949350505050565b6103d230826105fd565b50565b5f341161041f5760405162461bcd60e51b8152602060048201526013602482015272086c2dcdcdee840e6eac4dad2e84060408aa89606b1b60448201526064015b60405180910390fd5b5f61042934610372565b9050610448338261043933610509565b6104439190610a9a565b610635565b610482816104546104db565b61045e9190610a9a565b7fe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e55565b6103d233346105fd565b5f61036c61021a83610509565b5f6104a26104db565b5f036104af57505f919050565b6104b76104db565b600254610391565b6060600480546102d890610a18565b5f336103668185856105a0565b5f6105047fe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e5490565b905090565b5f61036c8261069d565b610520838383600161070d565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811461059a578181101561058c57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610416565b61059a84848484035f61070d565b50505050565b6001600160a01b0383166105c957604051634b637e8f60e11b81525f6004820152602401610416565b6001600160a01b0382166105f25760405163ec442f0560e01b81525f6004820152602401610416565b6105208383836107df565b6001600160a01b0382166106265760405163ec442f0560e01b81525f6004820152602401610416565b6106315f83836107df565b5050565b6040516bffffffffffffffffffffffff19606084901b1660208201527f101b73cb67a778893ea0c666939f8923c501a5d4cd59d1ecf919b502247b5b0c60348201525f9060540160405160208183030381529060405280519060200120905061052081839055565b6040516bffffffffffffffffffffffff19606083901b1660208201527f101b73cb67a778893ea0c666939f8923c501a5d4cd59d1ecf919b502247b5b0c60348201525f908190605401604051602081830303815290604052805190602001209050610706815490565b9392505050565b6001600160a01b0384166107365760405163e602df0560e01b81525f6004820152602401610416565b6001600160a01b03831661075f57604051634a1406b160e11b81525f6004820152602401610416565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561059a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107d191815260200190565b60405180910390a350505050565b6001600160a01b038316610809578060025f8282546107fe9190610a9a565b909155506108799050565b6001600160a01b0383165f908152602081905260409020548181101561085b5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610416565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610895576002805482900390556108b3565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108f891815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610950575f5ffd5b919050565b5f5f60408385031215610966575f5ffd5b61096f8361093a565b946020939093013593505050565b5f6020828403121561098d575f5ffd5b5035919050565b5f5f5f606084860312156109a6575f5ffd5b6109af8461093a565b92506109bd6020850161093a565b929592945050506040919091013590565b5f602082840312156109de575f5ffd5b6107068261093a565b5f5f604083850312156109f8575f5ffd5b610a018361093a565b9150610a0f6020840161093a565b90509250929050565b600181811c90821680610a2c57607f821691505b602082108103610a4a57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808202811582820484141761036c5761036c610a50565b5f82610a9557634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561036c5761036c610a5056fea2646970667358221220ab6584cabb7d0a805f94160f17e56b31c32700f3d282db8a8326a3ff51cb0efe64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5BCB2FC6 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xD5002F2E EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xF5EB42DC EQ PUSH2 0x2AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x5BCB2FC6 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x7A28FB88 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x19208451 GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x19208451 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x59974E38 EQ PUSH2 0x1B8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x141 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x12C CALLDATASIZE PUSH1 0x4 PUSH2 0x955 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x994 JUMP JUMPDEST PUSH2 0x3A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x3C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH2 0x3D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x4BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x955 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x4DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xA18 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x304 SWAP1 PUSH2 0xA18 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x34F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x326 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x34F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x332 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x366 DUP2 DUP6 DUP6 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x37C PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH0 SUB PUSH2 0x386 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x391 PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x39B SWAP1 DUP5 PUSH2 0xA64 JUMP JUMPDEST PUSH2 0x36C SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3B2 DUP6 DUP3 DUP6 PUSH2 0x525 JUMP JUMPDEST PUSH2 0x3BD DUP6 DUP6 DUP6 PUSH2 0x5A0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3D2 ADDRESS DUP3 PUSH2 0x5FD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x86C2DCDCDEE840E6EAC4DAD2E84060408AA89 PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x429 CALLVALUE PUSH2 0x372 JUMP JUMPDEST SWAP1 POP PUSH2 0x448 CALLER DUP3 PUSH2 0x439 CALLER PUSH2 0x509 JUMP JUMPDEST PUSH2 0x443 SWAP2 SWAP1 PUSH2 0xA9A JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x454 PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x45E SWAP2 SWAP1 PUSH2 0xA9A JUMP JUMPDEST PUSH32 0xE3B4B636E601189B5F4C6742EDF2538AC12BB61ED03E6DA26949D69838FA447E SSTORE JUMP JUMPDEST PUSH2 0x3D2 CALLER CALLVALUE PUSH2 0x5FD JUMP JUMPDEST PUSH0 PUSH2 0x36C PUSH2 0x21A DUP4 PUSH2 0x509 JUMP JUMPDEST PUSH0 PUSH2 0x4A2 PUSH2 0x4DB JUMP JUMPDEST PUSH0 SUB PUSH2 0x4AF JUMPI POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B7 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x391 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xA18 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x366 DUP2 DUP6 DUP6 PUSH2 0x5A0 JUMP JUMPDEST PUSH0 PUSH2 0x504 PUSH32 0xE3B4B636E601189B5F4C6742EDF2538AC12BB61ED03E6DA26949D69838FA447E SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x36C DUP3 PUSH2 0x69D JUMP JUMPDEST PUSH2 0x520 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x70D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x59A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x58C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x416 JUMP JUMPDEST PUSH2 0x59A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x70D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH2 0x520 DUP4 DUP4 DUP4 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH2 0x631 PUSH0 DUP4 DUP4 PUSH2 0x7DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x101B73CB67A778893EA0C666939F8923C501A5D4CD59D1ECF919B502247B5B0C PUSH1 0x34 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x520 DUP2 DUP4 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x101B73CB67A778893EA0C666939F8923C501A5D4CD59D1ECF919B502247B5B0C PUSH1 0x34 DUP3 ADD MSTORE PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x706 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x59A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7D1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x809 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0xA9A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x879 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x895 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x8F8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x950 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x966 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x96F DUP4 PUSH2 0x93A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x98D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9AF DUP5 PUSH2 0x93A JUMP JUMPDEST SWAP3 POP PUSH2 0x9BD PUSH1 0x20 DUP6 ADD PUSH2 0x93A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DE JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x706 DUP3 PUSH2 0x93A JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA01 DUP4 PUSH2 0x93A JUMP JUMPDEST SWAP2 POP PUSH2 0xA0F PUSH1 0x20 DUP5 ADD PUSH2 0x93A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA2C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA4A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x36C JUMPI PUSH2 0x36C PUSH2 0xA50 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA95 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x36C JUMPI PUSH2 0x36C PUSH2 0xA50 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH6 0x84CABB7D0A80 PUSH0 SWAP5 AND 0xF OR 0xE5 PUSH12 0x31C32700F3D282DB8A8326A3 SELFDESTRUCT MLOAD 0xCB 0xE INVALID PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "252:3177:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;-1:-1:-1;3998:186:1;;;;;:::i;:::-;;:::i;:::-;;;1085:14:8;;1078:22;1060:41;;1048:2;1033:18;3998:186:1;920:187:8;2849:97:1;;;;;;;;;;-1:-1:-1;2927:12:1;;2849:97;;;1258:25:8;;;1246:2;1231:18;2849:97:1;1112:177:8;2412:226:7;;;;;;;;;;-1:-1:-1;2412:226:7;;;;;:::i;:::-;;:::i;4776:244:1:-;;;;;;;;;;-1:-1:-1;4776:244:1;;;;;:::i;:::-;;:::i;2707:82::-;;;;;;;;;;-1:-1:-1;2707:82:1;;2780:2;2046:36:8;;2034:2;2019:18;2707:82:1;1904:184:8;2876:111:7;;;;;;;;;;-1:-1:-1;2876:111:7;;;;;:::i;:::-;;:::i;:::-;;1811:352;;;:::i;1665:140::-;;;;;;;;;;-1:-1:-1;1665:140:7;;;;;:::i;:::-;;:::i;2644:226::-;;;;;;;;;;-1:-1:-1;2644:226:7;;;;;:::i;:::-;;:::i;1981:93:1:-;;;;;;;;;;;;;:::i;3315:178::-;;;;;;;;;;-1:-1:-1;3315:178:1;;;;;:::i;:::-;;:::i;2169:121:7:-;;;;;;;;;;;;;:::i;3551:140:1:-;;;;;;;;;;-1:-1:-1;3551:140:1;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:1;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;2296:110:7;;;;;;;;;;-1:-1:-1;2296:110:7;;;;;:::i;:::-;;:::i;1779:89:1:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:4;4125:31:1;735:10:4;4141:7:1;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;2412:226:7:-;2483:7;2506:13;2927:12:1;;;2849:97;2506:13:7;2523:1;2506:18;2502:66;;-1:-1:-1;2547:10:7;2412:226::o;2502:66::-;2927:12:1;;2598:16:7;:14;:16::i;:::-;2585:29;;:10;:29;:::i;:::-;2584:47;;;;:::i;4776:244:1:-;4863:4;735:10:4;4919:37:1;4935:4;735:10:4;4950:5:1;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:1;;4776:244;-1:-1:-1;;;;4776:244:1:o;2876:111:7:-;2945:35;2959:4;2966:13;2945:5;:35::i;:::-;2876:111;:::o;1811:352::-;1876:1;1864:9;:13;1856:45;;;;-1:-1:-1;;;1856:45:7;;3663:2:8;1856:45:7;;;3645:21:8;3702:2;3682:18;;;3675:30;-1:-1:-1;;;3721:18:8;;;3714:49;3780:18;;1856:45:7;;;;;;;;;1912:20;1935:31;1956:9;1935:20;:31::i;:::-;1912:54;;1976:59;1987:10;2022:12;1999:20;2008:10;1999:8;:20::i;:::-;:35;;;;:::i;:::-;1976:10;:59::i;:::-;2045:72;2104:12;2085:16;:14;:16::i;:::-;:31;;;;:::i;:::-;380:66;1263:22:6;1162:139;2045:72:7;2128:28;2134:10;2146:9;2128:5;:28::i;1665:140::-;1732:7;1758:40;1779:18;1788:8;1779;:18::i;2644:226::-;2718:7;2741:16;:14;:16::i;:::-;2761:1;2741:21;2737:60;;-1:-1:-1;2785:1:7;;2644:226;-1:-1:-1;2644:226:7:o;2737:60::-;2847:16;:14;:16::i;:::-;2927:12:1;;2830:13:7;2849:97:1;1981:93;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:4;3438:27:1;735:10:4;3455:2:1;3459:5;3438:9;:27::i;2169:121:7:-;2216:7;2242:41;380:66;696:15:6;;573:154;2242:41:7;2235:48;;2169:121;:::o;2296:110::-;2353:7;2379:20;2390:8;2379:10;:20::i;8726:128:1:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;-1:-1:-1;;;;;3657:18:1;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:37:1;;10576:310;;10656:5;10637:16;:24;10633:130;;;10688:60;;-1:-1:-1;;;10688:60:1;;-1:-1:-1;;;;;4159:32:8;;10688:60:1;;;4141:51:8;4208:18;;;4201:34;;;4251:18;;;4244:34;;;4114:18;;10688:60:1;3939:345:8;10633:130:1;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10504:388;10415:477;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:1;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:1;;5544:1;5517:30;;;4435:51:8;4408:18;;5517:30:1;4289:203:8;5472:86:1;-1:-1:-1;;;;;5571:16:1;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:1;;5639:1;5610:32;;;4435:51:8;4408:18;;5610:32:1;4289:203:8;5567:86:1;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;7458:208::-;-1:-1:-1;;;;;7528:21:1;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:1;;7601:1;7572:32;;;4435:51:8;4408:18;;7572:32:1;4289:203:8;7524:91:1;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;3215:212:7:-;3314:43;;-1:-1:-1;;4674:2:8;4670:15;;;4666:53;3314:43:7;;;4654:66:8;1273:30:7;4736:12:8;;;4729:28;3289:12:7;;4773::8;;3314:43:7;;;;;;;;;;;;3304:54;;;;;;3289:69;;3368:52;3406:4;3412:7;1263:22:6;;1162:139;2993:216:7;3098:43;;-1:-1:-1;;4674:2:8;4670:15;;;4666:53;3098:43:7;;;4654:66:8;1273:30:7;4736:12:8;;;4729:28;3054:7:7;;;;4773:12:8;;3098:43:7;;;;;;;;;;;;3088:54;;;;;;3073:69;;3159:43;3197:4;696:15:6;;573:154;3159:43:7;3152:50;2993:216;-1:-1:-1;;;2993:216:7:o;9701:432:1:-;-1:-1:-1;;;;;9813:19:1;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:1;;9884:1;9855:32;;;4435:51:8;4408:18;;9855:32:1;4289:203:8;9809:89:1;-1:-1:-1;;;;;9911:21:1;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:1;;9983:1;9955:31;;;4435:51:8;4408:18;;9955:31:1;4289:203:8;9907:90:1;-1:-1:-1;;;;;10006:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:1;10094:5;-1:-1:-1;;;;;10085:31:1;;10110:5;10085:31;;;;1258:25:8;;1246:2;1231:18;;1112:177;10085:31:1;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:1;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:1;;-1:-1:-1;6093:540:1;;-1:-1:-1;;;;;6307:15:1;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:1;;-1:-1:-1;;;;;4159:32:8;;6386:50:1;;;4141:51:8;4208:18;;;4201:34;;;4251:18;;;4244:34;;;4114:18;;6386:50:1;3939:345:8;6336:115:1;-1:-1:-1;;;;;6571:15:1;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:1;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:1;7092:4;-1:-1:-1;;;;;7083:25:1;;7102:5;7083:25;;;;1258::8;;1246:2;1231:18;;1112:177;7083:25:1;;;;;;;;6008:1107;;;:::o;14:418:8:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:8;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:8:o;1294:226::-;1353:6;1406:2;1394:9;1385:7;1381:23;1377:32;1374:52;;;1422:1;1419;1412:12;1374:52;-1:-1:-1;1467:23:8;;1294:226;-1:-1:-1;1294:226:8:o;1525:374::-;1602:6;1610;1618;1671:2;1659:9;1650:7;1646:23;1642:32;1639:52;;;1687:1;1684;1677:12;1639:52;1710:29;1729:9;1710:29;:::i;:::-;1700:39;;1758:38;1792:2;1781:9;1777:18;1758:38;:::i;:::-;1525:374;;1748:48;;-1:-1:-1;;;1865:2:8;1850:18;;;;1837:32;;1525:374::o;2093:186::-;2152:6;2205:2;2193:9;2184:7;2180:23;2176:32;2173:52;;;2221:1;2218;2211:12;2173:52;2244:29;2263:9;2244:29;:::i;2284:260::-;2352:6;2360;2413:2;2401:9;2392:7;2388:23;2384:32;2381:52;;;2429:1;2426;2419:12;2381:52;2452:29;2471:9;2452:29;:::i;:::-;2442:39;;2500:38;2534:2;2523:9;2519:18;2500:38;:::i;:::-;2490:48;;2284:260;;;;;:::o;2549:380::-;2628:1;2624:12;;;;2671;;;2692:61;;2746:4;2738:6;2734:17;2724:27;;2692:61;2799:2;2791:6;2788:14;2768:18;2765:38;2762:161;;2845:10;2840:3;2836:20;2833:1;2826:31;2880:4;2877:1;2870:15;2908:4;2905:1;2898:15;2762:161;;2549:380;;;:::o;2934:127::-;2995:10;2990:3;2986:20;2983:1;2976:31;3026:4;3023:1;3016:15;3050:4;3047:1;3040:15;3066:168;3139:9;;;3170;;3187:15;;;3181:22;;3167:37;3157:71;;3208:18;;:::i;3239:217::-;3279:1;3305;3295:132;;3349:10;3344:3;3340:20;3337:1;3330:31;3384:4;3381:1;3374:15;3412:4;3409:1;3402:15;3295:132;-1:-1:-1;3441:9:8;;3239:217::o;3809:125::-;3874:9;;;3895:10;;;3892:36;;;3908:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "557400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24757",
								"balanceOf(address)": "infinite",
								"decimals()": "243",
								"distributeRewards(uint256)": "50968",
								"getPooledEthByShares(uint256)": "infinite",
								"getSharesByPooledEth(uint256)": "infinite",
								"getTotalShares()": "2372",
								"name()": "infinite",
								"sharesOf(address)": "infinite",
								"submit()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "51237",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_getShares(address)": "infinite",
								"_setShares(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 252,
									"end": 3429,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 252,
									"end": 3429,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 3429,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1659,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1659,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1659,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1659,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1409,
									"end": 1659,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1659,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1409,
									"end": 1659,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1409,
									"end": 1659,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1659,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1409,
									"end": 1659,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1659,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "4C6971756964207374616B656420457468657220322E30000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E6E88AA89"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1518,
									"end": 1547,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1546,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "3635C9ADC5DEA00000"
								},
								{
									"begin": 1518,
									"end": 1523,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1518,
									"end": 1523,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1518,
									"end": 1523,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1518,
									"end": 1547,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1518,
									"end": 1547,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1518,
									"end": 1547,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1518,
									"end": 1547,
									"modifierDepth": 1,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1518,
									"end": 1547,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1557,
									"end": 1591,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1568,
									"end": 1578,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1580,
									"end": 1590,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "3635C9ADC5DEA00000"
								},
								{
									"begin": 1557,
									"end": 1567,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1557,
									"end": 1591,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1557,
									"end": 1591,
									"modifierDepth": 1,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1557,
									"end": 1591,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1641,
									"end": 1651,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "3635C9ADC5DEA00000"
								},
								{
									"begin": 380,
									"end": 446,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "E3B4B636E601189B5F4C6742EDF2538AC12BB61ED03E6DA26949D69838FA447E"
								},
								{
									"begin": 1263,
									"end": 1285,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 252,
									"end": 3429,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2801,
									"end": 2852,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2774,
									"end": 2792,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2774,
									"end": 2792,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3215,
									"end": 3427,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 3215,
									"end": 3427,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3065,
									"end": 3067,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 3036,
									"end": 3051,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3051,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3051,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3032,
									"end": 3077,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3020,
									"end": 3078,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1303,
									"name": "PUSH",
									"source": 7,
									"value": "101B73CB67A778893EA0C666939F8923C501A5D4CD59D1ECF919B502247B5B0C"
								},
								{
									"begin": 3094,
									"end": 3106,
									"name": "PUSH",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 3094,
									"end": 3106,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3094,
									"end": 3106,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3087,
									"end": 3115,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3289,
									"end": 3301,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3289,
									"end": 3301,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3131,
									"end": 3143,
									"name": "PUSH",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 3131,
									"end": 3143,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3314,
									"end": 3357,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3304,
									"end": 3358,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3304,
									"end": 3358,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3304,
									"end": 3358,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3304,
									"end": 3358,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3304,
									"end": 3358,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3304,
									"end": 3358,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 3289,
									"end": 3358,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3289,
									"end": 3358,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3368,
									"end": 3420,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 3406,
									"end": 3410,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3412,
									"end": 3419,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3368,
									"end": 3405,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 3368,
									"end": 3405,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3368,
									"end": 3405,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3368,
									"end": 3420,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3368,
									"end": 3420,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3368,
									"end": 3420,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3368,
									"end": 3420,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 3368,
									"end": 3420,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3279,
									"end": 3427,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3215,
									"end": 3427,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3215,
									"end": 3427,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3215,
									"end": 3427,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1301,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1162,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1263,
									"end": 1285,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1263,
									"end": 1285,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1162,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3601,
									"end": 3633,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3601,
									"end": 3633,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3583,
									"end": 3634,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3650,
									"end": 3668,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3650,
									"end": 3668,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3650,
									"end": 3668,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3643,
									"end": 3677,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3643,
									"end": 3677,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3643,
									"end": 3677,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3693,
									"end": 3711,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 3693,
									"end": 3711,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3693,
									"end": 3711,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3686,
									"end": 3720,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3686,
									"end": 3720,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3686,
									"end": 3720,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3556,
									"end": 3574,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3556,
									"end": 3574,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 3381,
									"end": 3726,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3877,
									"end": 3902,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3877,
									"end": 3902,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3865,
									"end": 3867,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3850,
									"end": 3868,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3850,
									"end": 3868,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3731,
									"end": 3908,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1705,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2437,
									"end": 2438,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2500,
									"end": 2526,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1909,
									"end": 1910,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1906,
									"end": 1920,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1988,
									"end": 2014,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1902,
									"end": 1905,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2203,
									"end": 2229,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2304,
									"end": 2307,
									"name": "PUSH",
									"source": 8,
									"value": "F8"
								},
								{
									"begin": 2284,
									"end": 2308,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2280,
									"end": 2317,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2276,
									"end": 2318,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2261,
									"end": 2319,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2360,
									"end": 2382,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1351,
									"end": 2650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3154,
									"end": 3376,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 3154,
									"end": 3376,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3219,
									"end": 3228,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3219,
									"end": 3228,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3219,
									"end": 3228,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3240,
									"end": 3250,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3240,
									"end": 3250,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3240,
									"end": 3250,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3237,
									"end": 3370,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3237,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 3237,
									"end": 3370,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3292,
									"end": 3302,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 3287,
									"end": 3290,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 3283,
									"end": 3303,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3280,
									"end": 3281,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3273,
									"end": 3304,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3327,
									"end": 3331,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 3324,
									"end": 3325,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3317,
									"end": 3332,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3355,
									"end": 3359,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3352,
									"end": 3353,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3345,
									"end": 3360,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3237,
									"end": 3370,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 3237,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3154,
									"end": 3376,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3154,
									"end": 3376,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3154,
									"end": 3376,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3154,
									"end": 3376,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3154,
									"end": 3376,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3731,
									"end": 3908,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 3731,
									"end": 3908,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 252,
									"end": 3429,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 3429,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 252,
									"end": 3429,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 3429,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 3429,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 252,
									"end": 3429,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 3429,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab6584cabb7d0a805f94160f17e56b31c32700f3d282db8a8326a3ff51cb0efe64736f6c634300081c0033",
									".code": [
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "5BCB2FC6"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "D5002F2E"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "F5EB42DC"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "5BCB2FC6"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "7A28FB88"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "19208451"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "19208451"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "59974E38"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 3429,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2412,
											"end": 2638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2412,
											"end": 2638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2046,
											"end": 2082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2082,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1904,
											"end": 2088,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2876,
											"end": 2987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2876,
											"end": 2987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1811,
											"end": 2163,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1811,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1811,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1811,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1811,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1665,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1665,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2644,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 2644,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2169,
											"end": 2290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 2296,
											"end": 2406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 2296,
											"end": 2406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2412,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2490,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2519,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2506,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2524,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2524,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2502,
											"end": 2568,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2547,
											"end": 2557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2568,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2502,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2598,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2598,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2614,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2598,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2595,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2585,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2584,
											"end": 2631,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 2584,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2959,
											"end": 2963,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 2979,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2945,
											"end": 2980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 2980,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2945,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2987,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1811,
											"end": 2163,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1811,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1877,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1873,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3645,
											"end": 3666,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3702,
											"end": 3704,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3705,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "86C2DCDCDEE840E6EAC4DAD2E84060408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3721,
											"end": 3739,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3721,
											"end": 3739,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3721,
											"end": 3739,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3763,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3798,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3780,
											"end": 3798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1856,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1932,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1956,
											"end": 1965,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1935,
											"end": 1966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1966,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1935,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1987,
											"end": 1997,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2022,
											"end": 2034,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1999,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2019,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1999,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1999,
											"end": 2034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1999,
											"end": 2034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2034,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1999,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1976,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 2035,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1976,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2045,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2104,
											"end": 2116,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2085,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2085,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2085,
											"end": 2116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2085,
											"end": 2116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2085,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2085,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2085,
											"end": 2116,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2085,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 380,
											"end": 446,
											"name": "PUSH",
											"source": 7,
											"value": "E3B4B636E601189B5F4C6742EDF2538AC12BB61ED03E6DA26949D69838FA447E"
										},
										{
											"begin": 1263,
											"end": 1285,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1301,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2117,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2045,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2128,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2134,
											"end": 2144,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2146,
											"end": 2155,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2128,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2128,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1665,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1739,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1788,
											"end": 1796,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1779,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2718,
											"end": 2725,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2741,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2741,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2757,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2741,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2762,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2737,
											"end": 2797,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2785,
											"end": 2786,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2786,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2870,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2797,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2737,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2847,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2847,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2847,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2847,
											"end": 2863,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2847,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2223,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 380,
											"end": 446,
											"name": "PUSH",
											"source": 7,
											"value": "E3B4B636E601189B5F4C6742EDF2538AC12BB61ED03E6DA26949D69838FA447E"
										},
										{
											"begin": 696,
											"end": 711,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 696,
											"end": 711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 573,
											"end": 727,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2242,
											"end": 2283,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2242,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2235,
											"end": 2283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2235,
											"end": 2283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 2296,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2360,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2390,
											"end": 2398,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2379,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4159,
											"end": 4191,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4191,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4192,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4278,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4278,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4278,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4132,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4114,
											"end": 4132,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3939,
											"end": 4284,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4486,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4289,
											"end": 4492,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4486,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4289,
											"end": 4492,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4486,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4289,
											"end": 4492,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3427,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3215,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4674,
											"end": 4676,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4670,
											"end": 4685,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4670,
											"end": 4685,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4670,
											"end": 4685,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4719,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4720,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1273,
											"end": 1303,
											"name": "PUSH",
											"source": 7,
											"value": "101B73CB67A778893EA0C666939F8923C501A5D4CD59D1ECF919B502247B5B0C"
										},
										{
											"begin": 4736,
											"end": 4748,
											"name": "PUSH",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 4736,
											"end": 4748,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4736,
											"end": 4748,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4729,
											"end": 4757,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3289,
											"end": 3301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4785,
											"name": "PUSH",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 4773,
											"end": 4785,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3357,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3358,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3358,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3358,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3304,
											"end": 3358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3358,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 3406,
											"end": 3410,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3412,
											"end": 3419,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1263,
											"end": 1285,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1263,
											"end": 1285,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1301,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3209,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2993,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4674,
											"end": 4676,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4670,
											"end": 4685,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4670,
											"end": 4685,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4670,
											"end": 4685,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4719,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4720,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1273,
											"end": 1303,
											"name": "PUSH",
											"source": 7,
											"value": "101B73CB67A778893EA0C666939F8923C501A5D4CD59D1ECF919B502247B5B0C"
										},
										{
											"begin": 4736,
											"end": 4748,
											"name": "PUSH",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 4736,
											"end": 4748,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4736,
											"end": 4748,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4729,
											"end": 4757,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3061,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 3061,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 3061,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4785,
											"name": "PUSH",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 4773,
											"end": 4785,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3141,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3142,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3142,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3142,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3142,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3073,
											"end": 3142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3073,
											"end": 3142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3197,
											"end": 3201,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 711,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 696,
											"end": 711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 573,
											"end": 727,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3202,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3159,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3202,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2993,
											"end": 3209,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2993,
											"end": 3209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4486,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4289,
											"end": 4492,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4486,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4289,
											"end": 4492,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4159,
											"end": 4191,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4191,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4192,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4201,
											"end": 4235,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4278,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4278,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4278,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4132,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4114,
											"end": 4132,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3939,
											"end": 4284,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1520,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1294,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1394,
											"end": 1403,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1385,
											"end": 1392,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1381,
											"end": 1404,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1409,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1420,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1424,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1520,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1294,
											"end": 1520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1525,
											"end": 1899,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1525,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1602,
											"end": 1608,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1673,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1659,
											"end": 1668,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1657,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1669,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1642,
											"end": 1674,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1639,
											"end": 1691,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1639,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1639,
											"end": 1691,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1685,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1639,
											"end": 1691,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1639,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 1710,
											"end": 1739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1700,
											"end": 1739,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1700,
											"end": 1739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1790,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 1758,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1525,
											"end": 1899,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1525,
											"end": 1899,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1796,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1796,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1865,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1868,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1868,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1868,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1868,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1869,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1525,
											"end": 1899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2279,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2093,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2207,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2202,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2191,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2180,
											"end": 2203,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2244,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2399,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 2411,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2384,
											"end": 2416,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2431,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2471,
											"end": 2480,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2452,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 2534,
											"end": 2536,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2523,
											"end": 2532,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2537,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2500,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2538,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 2500,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2490,
											"end": 2538,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2490,
											"end": 2538,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2929,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2549,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2628,
											"end": 2629,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2624,
											"end": 2636,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 2636,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 2636,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 2636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2683,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2683,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2683,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2692,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 2692,
											"end": 2753,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 2750,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 2738,
											"end": 2744,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2734,
											"end": 2751,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2724,
											"end": 2751,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2724,
											"end": 2751,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2692,
											"end": 2753,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 2692,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2801,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2791,
											"end": 2797,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2788,
											"end": 2802,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2765,
											"end": 2803,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2762,
											"end": 2923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2845,
											"end": 2855,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2840,
											"end": 2843,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2836,
											"end": 2856,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2833,
											"end": 2834,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2826,
											"end": 2857,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2880,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 2912,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2905,
											"end": 2906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2913,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2923,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2762,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2929,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2929,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2929,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2549,
											"end": 2929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2934,
											"end": 3061,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2934,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2995,
											"end": 3005,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2990,
											"end": 2993,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2986,
											"end": 3006,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 2984,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 3007,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3026,
											"end": 3030,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3016,
											"end": 3031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3054,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3047,
											"end": 3048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3055,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3066,
											"end": 3234,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 3066,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3139,
											"end": 3148,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3139,
											"end": 3148,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3139,
											"end": 3148,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3179,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3179,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3202,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3202,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3202,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3203,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3203,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3167,
											"end": 3204,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3157,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 3157,
											"end": 3228,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3208,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 3208,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3208,
											"end": 3226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3456,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 3239,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3306,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3295,
											"end": 3427,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3359,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3344,
											"end": 3347,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3340,
											"end": 3360,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3361,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 3381,
											"end": 3382,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3374,
											"end": 3389,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3416,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3409,
											"end": 3410,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3417,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3427,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3295,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3441,
											"end": 3450,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3450,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3809,
											"end": 3934,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 3809,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3874,
											"end": 3883,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3874,
											"end": 3883,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3874,
											"end": 3883,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3895,
											"end": 3905,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3895,
											"end": 3905,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3895,
											"end": 3905,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 3928,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 3928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 3892,
											"end": 3928,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 3908,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3908,
											"end": 3926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"src/external/IStETH.sol",
								"src/mocks/DummyStorage.sol",
								"src/mocks/MockStETH.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"distributeRewards(uint256)": "59974e38",
							"getPooledEthByShares(uint256)": "7a28fb88",
							"getSharesByPooledEth(uint256)": "19208451",
							"getTotalShares()": "d5002f2e",
							"name()": "06fdde03",
							"sharesOf(address)": "f5eb42dc",
							"submit()": "5bcb2fc6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardAmount\",\"type\":\"uint256\"}],\"name\":\"distributeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sharesAmount\",\"type\":\"uint256\"}],\"name\":\"getPooledEthByShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ethAmount\",\"type\":\"uint256\"}],\"name\":\"getSharesByPooledEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"sharesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mocks/MockStETH.sol\":\"MockStETH\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol\",\":@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/\",\":@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/\",\":lz-evm-messagelib/=lib/layerzero-v2/packages/layerzero-v2/evm/messagelib\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/external/IStETH.sol\":{\"keccak256\":\"0x48496b9cc5ab0f654d7afc497b28e1814a71d461fe930160f408e86c32783f05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14ae6cf384c0191de96cb37c0f81c0b5dda2dab783418fcf670f4c58552c2887\",\"dweb:/ipfs/QmbZaR5uwxzdkd54vKjwBLjsy6d7u8KnSQuNSBrdXhphHB\"]},\"src/mocks/DummyStorage.sol\":{\"keccak256\":\"0x7348a896a0bcf3644f8e47a6717a0e57a3064d1b876a2d35fa5d0d55174a6af3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a815af462d682d25f43e05f6993bd944cfcfdc7c49e3892969667b0f0f684993\",\"dweb:/ipfs/QmS5cqdtSaQEjT49QGTyKgRzALB53LQEwmffP3AYzTJP3y\"]},\"src/mocks/MockStETH.sol\":{\"keccak256\":\"0x63f87b11dd750e36af0786746d8a9fbd45e484a877628956e354d94f6338761a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b214d182e0fb4afbeaad104c314af50a6c941806d9ecfd35f5377f9eae373d55\",\"dweb:/ipfs/QmNzV175rWttk9u6b9fPBXaYxRfWzHP9RMp4fQk6jr5dVf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "src/mocks/MockStETH.sol:MockStETH",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "src/mocks/MockStETH.sol:MockStETH",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "src/mocks/MockStETH.sol:MockStETH",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "src/mocks/MockStETH.sol:MockStETH",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "src/mocks/MockStETH.sol:MockStETH",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10619:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10637:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10656:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10633:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10663:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10715:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10724:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10742:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10688:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10813:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10820:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10829:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10848:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10804:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9788:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10790:1"
				},
				"id": 1
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"src/external/IStETH.sol": {
				"ast": {
					"absolutePath": "src/external/IStETH.sol",
					"exportedSymbols": {
						"IStETH": [
							805
						]
					},
					"id": 806,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStETH",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 805,
							"linearizedBaseContracts": [
								805
							],
							"name": "IStETH",
							"nameLocation": "67:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "89:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "100:2:5"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "126:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "125:9:5"
									},
									"scope": 805,
									"src": "80:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5002f2e",
									"id": 797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalShares",
									"nameLocation": "149:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:5"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "189:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:9:5"
									},
									"scope": 805,
									"src": "140:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f5eb42dc",
									"id": 804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sharesOf",
									"nameLocation": "212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "229:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "221:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "220:18:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "262:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:9:5"
									},
									"scope": 805,
									"src": "203:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 806,
							"src": "57:216:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:241:5"
				},
				"id": 5
			},
			"src/mocks/DummyStorage.sol": {
				"ast": {
					"absolutePath": "src/mocks/DummyStorage.sol",
					"exportedSymbols": {
						"DummyStorage": [
							909
						],
						"UnstructuredStorage": [
							880
						]
					},
					"id": 910,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 807,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UnstructuredStorage",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 880,
							"linearizedBaseContracts": [
								880
							],
							"name": "UnstructuredStorage",
							"nameLocation": "73:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "175:72:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "194:47:6",
													"nodeType": "YulBlock",
													"src": "194:47:6",
													"statements": [
														{
															"nativeSrc": "208:23:6",
															"nodeType": "YulAssignment",
															"src": "208:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nativeSrc": "222:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "222:8:6"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "216:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "216:5:6"
																},
																"nativeSrc": "216:15:6",
																"nodeType": "YulFunctionCall",
																"src": "216:15:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "208:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "208:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 812,
														"isOffset": false,
														"isSlot": false,
														"src": "208:4:6",
														"valueSize": 1
													},
													{
														"declaration": 809,
														"isOffset": false,
														"isSlot": false,
														"src": "222:8:6",
														"valueSize": 1
													}
												],
												"id": 814,
												"nodeType": "InlineAssembly",
												"src": "185:56:6"
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStorageBool",
									"nameLocation": "108:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "position",
												"nameLocation": "131:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "123:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 808,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "122:18:6"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "169:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "164:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 811,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "164:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:11:6"
									},
									"scope": 880,
									"src": "99:148:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "335:72:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "354:47:6",
													"nodeType": "YulBlock",
													"src": "354:47:6",
													"statements": [
														{
															"nativeSrc": "368:23:6",
															"nodeType": "YulAssignment",
															"src": "368:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nativeSrc": "382:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "382:8:6"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "376:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "376:5:6"
																},
																"nativeSrc": "376:15:6",
																"nodeType": "YulFunctionCall",
																"src": "376:15:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "368:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "368:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 821,
														"isOffset": false,
														"isSlot": false,
														"src": "368:4:6",
														"valueSize": 1
													},
													{
														"declaration": 818,
														"isOffset": false,
														"isSlot": false,
														"src": "382:8:6",
														"valueSize": 1
													}
												],
												"id": 823,
												"nodeType": "InlineAssembly",
												"src": "345:56:6"
											}
										]
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStorageAddress",
									"nameLocation": "262:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "position",
												"nameLocation": "288:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "280:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 817,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "279:18:6"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "329:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "321:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "320:14:6"
									},
									"scope": 880,
									"src": "253:154:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "495:72:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "514:47:6",
													"nodeType": "YulBlock",
													"src": "514:47:6",
													"statements": [
														{
															"nativeSrc": "528:23:6",
															"nodeType": "YulAssignment",
															"src": "528:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nativeSrc": "542:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "542:8:6"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "536:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "536:5:6"
																},
																"nativeSrc": "536:15:6",
																"nodeType": "YulFunctionCall",
																"src": "536:15:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "528:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "528:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 830,
														"isOffset": false,
														"isSlot": false,
														"src": "528:4:6",
														"valueSize": 1
													},
													{
														"declaration": 827,
														"isOffset": false,
														"isSlot": false,
														"src": "542:8:6",
														"valueSize": 1
													}
												],
												"id": 832,
												"nodeType": "InlineAssembly",
												"src": "505:56:6"
											}
										]
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStorageBytes32",
									"nameLocation": "422:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "position",
												"nameLocation": "448:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "440:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 826,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:18:6"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "489:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "481:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 829,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "481:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "480:14:6"
									},
									"scope": 880,
									"src": "413:154:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "655:72:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "674:47:6",
													"nodeType": "YulBlock",
													"src": "674:47:6",
													"statements": [
														{
															"nativeSrc": "688:23:6",
															"nodeType": "YulAssignment",
															"src": "688:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nativeSrc": "702:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "702:8:6"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "696:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "696:5:6"
																},
																"nativeSrc": "696:15:6",
																"nodeType": "YulFunctionCall",
																"src": "696:15:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "688:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "688:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 839,
														"isOffset": false,
														"isSlot": false,
														"src": "688:4:6",
														"valueSize": 1
													},
													{
														"declaration": 836,
														"isOffset": false,
														"isSlot": false,
														"src": "702:8:6",
														"valueSize": 1
													}
												],
												"id": 841,
												"nodeType": "InlineAssembly",
												"src": "665:56:6"
											}
										]
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStorageUint256",
									"nameLocation": "582:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "position",
												"nameLocation": "608:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "600:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 835,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:18:6"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "649:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "641:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:14:6"
									},
									"scope": 880,
									"src": "573:154:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "795:71:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "814:46:6",
													"nodeType": "YulBlock",
													"src": "814:46:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nativeSrc": "835:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "835:8:6"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "845:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "845:4:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "828:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "828:6:6"
																},
																"nativeSrc": "828:22:6",
																"nodeType": "YulFunctionCall",
																"src": "828:22:6"
															},
															"nativeSrc": "828:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "828:22:6"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 847,
														"isOffset": false,
														"isSlot": false,
														"src": "845:4:6",
														"valueSize": 1
													},
													{
														"declaration": 845,
														"isOffset": false,
														"isSlot": false,
														"src": "835:8:6",
														"valueSize": 1
													}
												],
												"id": 850,
												"nodeType": "InlineAssembly",
												"src": "805:55:6"
											}
										]
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setStorageBool",
									"nameLocation": "742:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "position",
												"nameLocation": "765:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "757:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 844,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "780:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "775:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 846,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "775:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:29:6"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:0:6"
									},
									"scope": 880,
									"src": "733:133:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "940:71:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "959:46:6",
													"nodeType": "YulBlock",
													"src": "959:46:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nativeSrc": "980:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "980:8:6"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "990:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "990:4:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "973:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "973:6:6"
																},
																"nativeSrc": "973:22:6",
																"nodeType": "YulFunctionCall",
																"src": "973:22:6"
															},
															"nativeSrc": "973:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "973:22:6"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 856,
														"isOffset": false,
														"isSlot": false,
														"src": "990:4:6",
														"valueSize": 1
													},
													{
														"declaration": 854,
														"isOffset": false,
														"isSlot": false,
														"src": "980:8:6",
														"valueSize": 1
													}
												],
												"id": 859,
												"nodeType": "InlineAssembly",
												"src": "950:55:6"
											}
										]
									},
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setStorageAddress",
									"nameLocation": "881:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "position",
												"nameLocation": "907:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "899:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 853,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "925:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "917:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:32:6"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "940:0:6"
									},
									"scope": 880,
									"src": "872:139:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "1085:71:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1104:46:6",
													"nodeType": "YulBlock",
													"src": "1104:46:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nativeSrc": "1125:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1125:8:6"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1135:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1135:4:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "1118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1118:6:6"
																},
																"nativeSrc": "1118:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1118:22:6"
															},
															"nativeSrc": "1118:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1118:22:6"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 865,
														"isOffset": false,
														"isSlot": false,
														"src": "1135:4:6",
														"valueSize": 1
													},
													{
														"declaration": 863,
														"isOffset": false,
														"isSlot": false,
														"src": "1125:8:6",
														"valueSize": 1
													}
												],
												"id": 868,
												"nodeType": "InlineAssembly",
												"src": "1095:55:6"
											}
										]
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setStorageBytes32",
									"nameLocation": "1026:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "position",
												"nameLocation": "1052:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1044:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 862,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1070:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1062:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 864,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:32:6"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1085:0:6"
									},
									"scope": 880,
									"src": "1017:139:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "1230:71:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1249:46:6",
													"nodeType": "YulBlock",
													"src": "1249:46:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nativeSrc": "1270:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1270:8:6"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1280:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1280:4:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "1263:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1263:6:6"
																},
																"nativeSrc": "1263:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1263:22:6"
															},
															"nativeSrc": "1263:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1263:22:6"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 874,
														"isOffset": false,
														"isSlot": false,
														"src": "1280:4:6",
														"valueSize": 1
													},
													{
														"declaration": 872,
														"isOffset": false,
														"isSlot": false,
														"src": "1270:8:6",
														"valueSize": 1
													}
												],
												"id": 877,
												"nodeType": "InlineAssembly",
												"src": "1240:55:6"
											}
										]
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setStorageUint256",
									"nameLocation": "1171:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "position",
												"nameLocation": "1197:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1189:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 871,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1189:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1215:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1207:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1207:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:32:6"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1230:0:6"
									},
									"scope": 880,
									"src": "1162:139:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 910,
							"src": "65:1238:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DummyStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 909,
							"linearizedBaseContracts": [
								909
							],
							"name": "DummyStorage",
							"nameLocation": "1314:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 883,
									"libraryName": {
										"id": 881,
										"name": "UnstructuredStorage",
										"nameLocations": [
											"1339:19:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 880,
										"src": "1339:19:6"
									},
									"nodeType": "UsingForDirective",
									"src": "1333:38:6",
									"typeName": {
										"id": 882,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1363:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"constant": true,
									"id": 886,
									"mutability": "constant",
									"name": "TOTAL_SHARES_POSITION",
									"nameLocation": "1403:21:6",
									"nodeType": "VariableDeclaration",
									"scope": 909,
									"src": "1377:116:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 884,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1377:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307865336234623633366536303131383962356634633637343265646632353338616331326262363165643033653664613236393439643639383338666134343765",
										"id": 885,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1427:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_102994306697956093250521465604253751865913900091852221964003712542419124372606_by_1",
											"typeString": "int_const 1029...(70 digits omitted)...2606"
										},
										"value": "0xe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "1556:65:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 891,
															"name": "TOTAL_SHARES_POSITION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "1573:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1595:17:6",
														"memberName": "getStorageUint256",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 843,
														"src": "1573:39:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_uint256_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (uint256)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1573:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 890,
												"id": 894,
												"nodeType": "Return",
												"src": "1566:48:6"
											}
										]
									},
									"functionSelector": "d5002f2e",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalShares",
									"nameLocation": "1509:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1523:2:6"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1547:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1546:9:6"
									},
									"scope": 909,
									"src": "1500:121:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "1672:62:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "_new",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "1722:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 901,
															"name": "TOTAL_SHARES_POSITION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "1682:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1704:17:6",
														"memberName": "setStorageUint256",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 879,
														"src": "1682:39:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1682:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "1682:45:6"
											}
										]
									},
									"functionSelector": "a77384c1",
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setTotalShares",
									"nameLocation": "1636:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "_new",
												"nameLocation": "1659:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "1651:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1651:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1650:14:6"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1672:0:6"
									},
									"scope": 909,
									"src": "1627:107:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 910,
							"src": "1305:431:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:1743:6"
				},
				"id": 6
			},
			"src/mocks/MockStETH.sol": {
				"ast": {
					"absolutePath": "src/mocks/MockStETH.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"IStETH": [
							805
						],
						"MockStETH": [
							1165
						],
						"UnstructuredStorage": [
							880
						]
					},
					"id": 1166,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 911,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "src/external/IStETH.sol",
							"file": "../external/IStETH.sol",
							"id": 912,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 806,
							"src": "57:32:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/mocks/DummyStorage.sol",
							"file": "./DummyStorage.sol",
							"id": 914,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 910,
							"src": "91:55:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 913,
										"name": "UnstructuredStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 880,
										"src": "99:19:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 652,
							"src": "195:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 916,
										"name": "ERC20",
										"nameLocations": [
											"274:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "274:5:7"
									},
									"id": 917,
									"nodeType": "InheritanceSpecifier",
									"src": "274:5:7"
								}
							],
							"canonicalName": "MockStETH",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1165,
							"linearizedBaseContracts": [
								1165,
								651,
								41,
								755,
								729,
								785
							],
							"name": "MockStETH",
							"nameLocation": "261:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 920,
									"libraryName": {
										"id": 918,
										"name": "UnstructuredStorage",
										"nameLocations": [
											"292:19:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 880,
										"src": "292:19:7"
									},
									"nodeType": "UsingForDirective",
									"src": "286:38:7",
									"typeName": {
										"id": 919,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "316:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"constant": true,
									"id": 923,
									"mutability": "constant",
									"name": "TOTAL_SHARES_POSITION",
									"nameLocation": "356:21:7",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "330:116:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 921,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "330:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307865336234623633366536303131383962356634633637343265646632353338616331326262363165643033653664613236393439643639383338666134343765",
										"id": 922,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "380:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_102994306697956093250521465604253751865913900091852221964003712542419124372606_by_1",
											"typeString": "int_const 1029...(70 digits omitted)...2606"
										},
										"value": "0xe3b4b636e601189b5f4c6742edf2538ac12bb61ed03e6da26949d69838fa447e"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 926,
									"mutability": "constant",
									"name": "BUFFERED_ETHER_POSITION",
									"nameLocation": "517:23:7",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "491:126:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 924,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "491:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307865643331306166323366363166393664616566626364313430623330366330626462663863313738333938323939373431363837623930653739343737326230",
										"id": 925,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "551:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_107284796168853814909421949192272742813925401600093983281928604243249999606448_by_1",
											"typeString": "int_const 1072...(70 digits omitted)...6448"
										},
										"value": "0xed310af23f61f96daefbcd140b306c0bdbf8c178398299741687b90e794772b0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 929,
									"mutability": "constant",
									"name": "CL_BALANCE_POSITION",
									"nameLocation": "690:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "664:114:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 927,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "664:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861363664333566303534653638313433633138663332633939306564356362393732626236386136386635303063643264643361313662626633363836343833",
										"id": 928,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "712:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_75276891466767701110455035402899074717820186579380100735902651119326856766595_by_1",
											"typeString": "int_const 7527...(69 digits omitted)...6595"
										},
										"value": "0xa66d35f054e68143c18f32c990ed5cb972bb68a68f500cd2dd3a16bbf3686483"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 932,
									"mutability": "constant",
									"name": "DEPOSITED_VALIDATORS_POSITION",
									"nameLocation": "851:29:7",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "825:132:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 930,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "825:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307865366533353137356562353366633030363532306132613963336539373131613763303064653666663263333264643331646638633561323463616331623563",
										"id": 931,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "891:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_104433591678406750373513749377241330421616024002775178121966708076493111303004_by_1",
											"typeString": "int_const 1044...(70 digits omitted)...3004"
										},
										"value": "0xe6e35175eb53fc006520a2a9c3e9711a7c00de6ff2c32dd31df8c5a24cac1b5c"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 935,
									"mutability": "constant",
									"name": "CL_VALIDATORS_POSITION",
									"nameLocation": "1036:22:7",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "1010:125:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 933,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1010:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839663730303031643832623665663534653964333732356234363538316333656239656533616130326239343162366161353464363738613963613335623130",
										"id": 934,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1069:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_72115630591598841109113493599626062768900014273462042099823215027043891895056_by_1",
											"typeString": "int_const 7211...(69 digits omitted)...5056"
										},
										"value": "0x9f70001d82b6ef54e9d3725b46581c3eb9ee3aa02b941b6aa54d678a9ca35b10"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 940,
									"mutability": "constant",
									"name": "SHARES_POSITION",
									"nameLocation": "1255:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "1229:74:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 936,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1229:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6c69646f2e53744554482e736861726573",
												"id": 938,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1283:19:7",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_101b73cb67a778893ea0c666939f8923c501a5d4cd59d1ecf919b502247b5b0c",
													"typeString": "literal_string \"lido.StETH.shares\""
												},
												"value": "lido.StETH.shares"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_101b73cb67a778893ea0c666939f8923c501a5d4cd59d1ecf919b502247b5b0c",
													"typeString": "literal_string \"lido.StETH.shares\""
												}
											],
											"id": 937,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1273:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 939,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1273:30:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 943,
									"mutability": "constant",
									"name": "INITIAL_RATE",
									"nameLocation": "1383:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "1358:44:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 941,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1358:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 942,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1398:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "1465:194:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 951,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1524:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1528:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1524:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31303030",
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1536:10:7",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															}
														],
														"id": 950,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1518:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1518:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "1518:29:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 957,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1568:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1572:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1568:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31303030",
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1580:10:7",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															}
														],
														"id": 956,
														"name": "_setShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "1557:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1557:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "1557:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1641:10:7",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															}
														],
														"expression": {
															"id": 962,
															"name": "TOTAL_SHARES_POSITION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "1601:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1623:17:7",
														"memberName": "setStorageUint256",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 879,
														"src": "1601:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1601:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "1601:51:7"
											}
										]
									},
									"id": 969,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4c6971756964207374616b656420457468657220322e30",
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1429:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d0475442dbe1381d44afad818dc97da0a5b374312c7fe323cc2a3df88293e4ba",
														"typeString": "literal_string \"Liquid staked Ether 2.0\""
													},
													"value": "Liquid staked Ether 2.0"
												},
												{
													"hexValue": "7374455448",
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1456:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_5318b5909b20227fb38f47aa955f9f06527b0ae497ac2d344a4aacb624e26485",
														"typeString": "literal_string \"stETH\""
													},
													"value": "stETH"
												}
											],
											"id": 948,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 945,
												"name": "ERC20",
												"nameLocations": [
													"1423:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "1423:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1423:41:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1420:2:7"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1465:0:7"
									},
									"scope": 1165,
									"src": "1409:250:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										237
									],
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "1741:64:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 979,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "1788:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 978,
																"name": "sharesOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "1779:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1779:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 977,
														"name": "getPooledEthByShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "1758:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1758:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 976,
												"id": 982,
												"nodeType": "Return",
												"src": "1751:47:7"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1674:9:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 973,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1714:8:7"
									},
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "1692:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1684:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:18:7"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1732:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1731:9:7"
									},
									"scope": 1165,
									"src": "1665:140:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "1846:317:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 988,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1864:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1868:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1864:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1876:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1864:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207375626d6974203020455448",
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1879:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7c4201f5724086737f17babf309efa26d71d5d7e134e45a5d0d45b5c5b99859f",
																"typeString": "literal_string \"Cannot submit 0 ETH\""
															},
															"value": "Cannot submit 0 ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7c4201f5724086737f17babf309efa26d71d5d7e134e45a5d0d45b5c5b99859f",
																"typeString": "literal_string \"Cannot submit 0 ETH\""
															}
														],
														"id": 987,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1856:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1856:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "1856:45:7"
											},
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "sharesAmount",
														"nameLocation": "1920:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1029,
														"src": "1912:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1912:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1001,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 998,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1956:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1960:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1956:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 997,
														"name": "getSharesByPooledEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "1935:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1935:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1912:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1003,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1987:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1991:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1987:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1006,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2008:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2012:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2008:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1005,
																	"name": "sharesOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "1999:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1999:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1009,
																"name": "sharesAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "2022:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1999:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1002,
														"name": "_setShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "1976:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1976:59:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "1976:59:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1016,
																	"name": "getTotalShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "2085:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2085:16:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1018,
																"name": "sharesAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "2104:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2085:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1013,
															"name": "TOTAL_SHARES_POSITION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "2045:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2067:17:7",
														"memberName": "setStorageUint256",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 879,
														"src": "2045:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2045:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "2045:72:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1023,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2134:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2138:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2134:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1025,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2146:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2150:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2146:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1022,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2128:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "2128:28:7"
											}
										]
									},
									"functionSelector": "5bcb2fc6",
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "submit",
									"nameLocation": "1820:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1826:2:7"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1846:0:7"
									},
									"scope": 1165,
									"src": "1811:352:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "2225:65:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1035,
															"name": "TOTAL_SHARES_POSITION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "2242:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2264:17:7",
														"memberName": "getStorageUint256",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 843,
														"src": "2242:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_uint256_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (uint256)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2242:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1034,
												"id": 1038,
												"nodeType": "Return",
												"src": "2235:48:7"
											}
										]
									},
									"functionSelector": "d5002f2e",
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalShares",
									"nameLocation": "2178:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2192:2:7"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2216:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2216:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2215:9:7"
									},
									"scope": 1165,
									"src": "2169:121:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "2362:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1048,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "2390:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1047,
														"name": "_getShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "2379:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2379:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1046,
												"id": 1050,
												"nodeType": "Return",
												"src": "2372:27:7"
											}
										]
									},
									"functionSelector": "f5eb42dc",
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sharesOf",
									"nameLocation": "2305:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "2322:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2314:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:18:7"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2353:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2353:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:9:7"
									},
									"scope": 1165,
									"src": "2296:110:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "2492:146:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1059,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "2506:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2506:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2523:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2506:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1066,
												"nodeType": "IfStatement",
												"src": "2502:66:7",
												"trueBody": {
													"id": 1065,
													"nodeType": "Block",
													"src": "2526:42:7",
													"statements": [
														{
															"expression": {
																"id": 1063,
																"name": "_ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "2547:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1058,
															"id": 1064,
															"nodeType": "Return",
															"src": "2540:17:7"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1067,
																	"name": "_ethAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "2585:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1068,
																		"name": "getTotalShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "2598:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2598:16:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2585:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1071,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2584:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1072,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "2618:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2618:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2584:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1075,
												"nodeType": "Return",
												"src": "2577:54:7"
											}
										]
									},
									"functionSelector": "19208451",
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSharesByPooledEth",
									"nameLocation": "2421:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "_ethAmount",
												"nameLocation": "2450:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "2442:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2442:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:20:7"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "2483:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2483:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2482:9:7"
									},
									"scope": 1165,
									"src": "2412:226:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "2727:143:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1084,
															"name": "getTotalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "2741:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2741:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2761:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2741:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1091,
												"nodeType": "IfStatement",
												"src": "2737:60:7",
												"trueBody": {
													"id": 1090,
													"nodeType": "Block",
													"src": "2764:33:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2785:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1083,
															"id": 1089,
															"nodeType": "Return",
															"src": "2778:8:7"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1092,
																	"name": "_sharesAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "2814:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1093,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "2830:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2830:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2814:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1096,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2813:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1097,
															"name": "getTotalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "2847:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2847:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2813:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1100,
												"nodeType": "Return",
												"src": "2806:57:7"
											}
										]
									},
									"functionSelector": "7a28fb88",
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPooledEthByShares",
									"nameLocation": "2653:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "_sharesAmount",
												"nameLocation": "2682:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2674:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2674:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2673:23:7"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2718:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:9:7"
									},
									"scope": 1165,
									"src": "2644:226:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "2935:52:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1110,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2959:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MockStETH_$1165",
																		"typeString": "contract MockStETH"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MockStETH_$1165",
																		"typeString": "contract MockStETH"
																	}
																],
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2951:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1108,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2951:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2951:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1112,
															"name": "_rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "2966:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1107,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2945:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2945:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "2945:35:7"
											}
										]
									},
									"functionSelector": "59974e38",
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distributeRewards",
									"nameLocation": "2885:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "_rewardAmount",
												"nameLocation": "2911:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "2903:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2902:23:7"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2935:0:7"
									},
									"scope": 1165,
									"src": "2876:111:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "3063:146:7",
										"statements": [
											{
												"assignments": [
													1124
												],
												"declarations": [
													{
														"constant": false,
														"id": 1124,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3081:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1138,
														"src": "3073:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1123,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3073:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1132,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1128,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "3115:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1129,
																	"name": "SHARES_POSITION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "3125:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1126,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3098:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3102:12:7",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3098:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3098:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1125,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3088:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3088:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3073:69:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1135,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "3197:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1133,
															"name": "UnstructuredStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "3159:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_UnstructuredStorage_$880_$",
																"typeString": "type(library UnstructuredStorage)"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3179:17:7",
														"memberName": "getStorageUint256",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 843,
														"src": "3159:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_uint256_$",
															"typeString": "function (bytes32) view returns (uint256)"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3159:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1122,
												"id": 1137,
												"nodeType": "Return",
												"src": "3152:50:7"
											}
										]
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getShares",
									"nameLocation": "3002:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "3021:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3013:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3013:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:18:7"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3054:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3054:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:9:7"
									},
									"scope": 1165,
									"src": "2993:216:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "3279:148:7",
										"statements": [
											{
												"assignments": [
													1147
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3297:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "3289:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1146,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3289:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1155,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1151,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "3331:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1152,
																	"name": "SHARES_POSITION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "3341:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1149,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3314:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3318:12:7",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3314:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3314:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1148,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3304:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3289:69:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1159,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "3406:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1160,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "3412:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1156,
															"name": "UnstructuredStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "3368:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_UnstructuredStorage_$880_$",
																"typeString": "type(library UnstructuredStorage)"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3388:17:7",
														"memberName": "setStorageUint256",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 879,
														"src": "3368:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3368:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "3368:52:7"
											}
										]
									},
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setShares",
									"nameLocation": "3224:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "3243:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "3235:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3235:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3261:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "3253:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3253:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3234:35:7"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3279:0:7"
									},
									"scope": 1165,
									"src": "3215:212:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1166,
							"src": "252:3177:7",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "32:3398:7"
				},
				"id": 7
			}
		}
	}
}